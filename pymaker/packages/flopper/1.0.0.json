{"contract_types":{"DSNote":{"abi":[{"anonymous":true,"inputs":[{"indexed":true,"name":"sig","type":"bytes4"},{"indexed":true,"name":"usr","type":"address"},{"indexed":true,"name":"arg1","type":"bytes32"},{"indexed":true,"name":"arg2","type":"bytes32"},{"indexed":false,"name":"data","type":"bytes"}],"name":"LogNote","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723058208a129a684fc76e89bfa746394a7af583a8cf136e595eea9aeca1f97751c0456264736f6c634300050a0032"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fdfea265627a7a723058208a129a684fc76e89bfa746394a7af583a8cf136e595eea9aeca1f97751c0456264736f6c634300050a0032"}},"Flopper":{"abi":[{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"yank","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"what","type":"bytes32"},{"name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"bids","outputs":[{"name":"bid","type":"uint256"},{"name":"lot","type":"uint256"},{"name":"guy","type":"address"},{"name":"tic","type":"uint48"},{"name":"end","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ttl","outputs":[{"name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"lot","type":"uint256"},{"name":"bid","type":"uint256"}],"name":"dent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"beg","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"gal","type":"address"},{"name":"lot","type":"uint256"},{"name":"bid","type":"uint256"}],"name":"kick","outputs":[{"name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"wards","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"deal","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"tau","outputs":[{"name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"kicks","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"tick","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"vat_","type":"address"},{"name":"gem_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"},{"indexed":false,"name":"lot","type":"uint256"},{"indexed":false,"name":"bid","type":"uint256"},{"indexed":true,"name":"gal","type":"address"}],"name":"Kick","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"name":"sig","type":"bytes4"},{"indexed":true,"name":"usr","type":"address"},{"indexed":true,"name":"arg1","type":"bytes32"},{"indexed":true,"name":"arg2","type":"bytes32"},{"indexed":false,"name":"data","type":"bytes"}],"name":"LogNote","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":""},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50600436106101165760003560e01c80637d780d82116100a2578063bf353dbb11610071578063bf353dbb14610469578063c959c42b146104c1578063cfc4af55146104ef578063cfdd33021461051d578063fc7b6aee1461053b57610116565b80637d780d821461037d578063957aa58c1461039b5780639c52a7f1146103b9578063b7e9cd24146103fd57610116565b80634e8b1dd5116100e95780634e8b1dd5146102755780635ff3a382146102a357806365fae35e146102e557806369245009146103295780637bd2bea71461033357610116565b806326e027f11461011b57806329ae81141461014957806336569e77146101815780634423c5f1146101cb575b600080fd5b6101476004803603602081101561013157600080fd5b8101908080359060200190929190505050610569565b005b61017f6004803603604081101561015f57600080fd5b8101908080359060200190929190803590602001909291905050506107de565b005b61018961092c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101f7600480360360208110156101e157600080fd5b8101908080359060200190929190505050610952565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018365ffffffffffff1665ffffffffffff1681526020018265ffffffffffff1665ffffffffffff1681526020019550505050505060405180910390f35b61027d6109cc565b604051808265ffffffffffff1665ffffffffffff16815260200191505060405180910390f35b6102e3600480360360608110156102b957600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506109e4565b005b610327600480360360208110156102fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dc6565b005b610331610e8b565b005b61033b610f13565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610385610f39565b6040518082815260200191505060405180910390f35b6103a3610f3f565b6040518082815260200191505060405180910390f35b6103fb600480360360208110156103cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f45565b005b6104536004803603606081101561041357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919050505061100a565b6040518082815260200191505060405180910390f35b6104ab6004803603602081101561047f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111eb565b6040518082815260200191505060405180910390f35b6104ed600480360360208110156104d757600080fd5b8101908080359060200190929190505050611203565b005b6104f7611487565b604051808265ffffffffffff1665ffffffffffff16815260200191505060405180910390f35b61052561149f565b6040518082815260200191505060405180910390f35b6105676004803603602081101561055157600080fd5b81019080803590602001909291905050506114a5565b005b60006007541461057857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105e857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b306001600085815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000868152602001908152602001600020600001546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561071157600080fd5b505af1158015610725573d6000803e3d6000fd5b505050506001600082815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549065ffffffffffff021916905560028201601a6101000a81549065ffffffffffff021916905550505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461082957600080fd5b7f626567000000000000000000000000000000000000000000000000000000000082141561085957806004819055505b7f74746c00000000000000000000000000000000000000000000000000000000008214156108a75780600560006101000a81548165ffffffffffff021916908365ffffffffffff1602179055505b7f74617500000000000000000000000000000000000000000000000000000000008214156108f55780600560066101000a81548165ffffffffffff021916908365ffffffffffff1602179055505b5961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a4505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900465ffffffffffff169080600201601a9054906101000a900465ffffffffffff16905085565b600560009054906101000a900465ffffffffffff1681565b6001600754146109f357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a6357600080fd5b426001600085815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff161180610ad1575060006001600085815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff16145b610ada57600080fd5b4260016000858152602001908152602001600020600201601a9054906101000a900465ffffffffffff1665ffffffffffff1611610b1657600080fd5b60016000848152602001908152602001600020600001548114610b3857600080fd5b60016000848152602001908152602001600020600101548210610b5a57600080fd5b60016000848152602001908152602001600020600101546b033b2e3c9fd0803ce8000000610b8a600454856115aa565b81610b9157fe5b041115610b9d57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b336001600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610cb057600080fd5b505af1158015610cc4573d6000803e3d6000fd5b50505050336001600085815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001600085815260200190815260200160002060010181905550610d5642600560009054906101000a900465ffffffffffff166115d6565b6001600085815260200190815260200160002060020160146101000a81548165ffffffffffff021916908365ffffffffffff1602179055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a450505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610e1157600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ed657600080fd5b60006007819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a450565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60075481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f9057600080fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461105757600080fd5b60016007541461106657600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6006541061109457600080fd5b6006600081546001019190508190559050816001600083815260200190815260200160002060000181905550826001600083815260200190815260200160002060010181905550836001600083815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061114e42600560069054906101000a900465ffffffffffff166115d6565b60016000838152602001908152602001600020600201601a6101000a81548165ffffffffffff021916908365ffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f7e8881001566f9f89aedb9c5dc3d856a2b81e5235a8196413ed484be91cc0df682858560405180848152602001838152602001828152602001935050505060405180910390a29392505050565b60006020528060005260406000206000915090505481565b60016007541461121257600080fd5b426001600083815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff16108015611282575060006001600083815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff1614155b806112bc57504260016000838152602001908152602001600020600201601a9054906101000a900465ffffffffffff1665ffffffffffff16105b6112c557600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f196001600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660016000858152602001908152602001600020600101546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156113ba57600080fd5b505af11580156113ce573d6000803e3d6000fd5b505050506001600082815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549065ffffffffffff021916905560028201601a6101000a81549065ffffffffffff021916905550505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b600560069054906101000a900465ffffffffffff1681565b60065481565b4260016000838152602001908152602001600020600201601a9054906101000a900465ffffffffffff1665ffffffffffff16106114e157600080fd5b60006001600083815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff161461151e57600080fd5b61153c42600560069054906101000a900465ffffffffffff166115d6565b60016000838152602001908152602001600020600201601a6101000a81548165ffffffffffff021916908365ffffffffffff1602179055505961012081016040526020815260e0602082015260e0600060408301376024356004353360003560e01c60e01b61012085a45050565b6000808214806115c757508282838502925082816115c457fe5b04145b6115d057600080fd5b92915050565b60008265ffffffffffff1682840191508165ffffffffffff1610156115fa57600080fd5b9291505056fea265627a7a72305820e7826bb04cca5f041afb496fecfd048e11793f6f0b6a0b83c8d49eefdfd81d2d64736f6c634300050a0032"}},"GemLike":{"abi":[{"constant":false,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x"}},"VatLike":{"abi":[{"constant":false,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x"}}},"manifest_version":"2","meta":{"authors":["Rain <rainbreak@riseup.net>"],"description":"This thing creates gems on demand in return for dai.","keywords":["dai"," dapphub"," dappsys"," maker"," solidity"],"license":"GPL3","links":{"documentation":"https://github.com/makerdao/dss/wiki","repo":"https://github.com/makerdao/dss"}},"package_name":"flopper","sources":{"./flop.sol":"/// flop.sol -- Debt auction\n\n// Copyright (C) 2018 Rain <rainbreak@riseup.net>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\npragma solidity >=0.5.0;\n\nimport \"./lib.sol\";\n\ncontract VatLike {\n    function move(address,address,uint) external;\n}\ncontract GemLike {\n    function mint(address,uint) external;\n}\n\n/*\n   This thing creates gems on demand in return for dai.\n\n - `lot` gems for sale\n - `bid` dai paid\n - `gal` receives dai income\n - `ttl` single bid lifetime\n - `beg` minimum bid increase\n - `end` max auction duration\n*/\n\ncontract Flopper is DSNote {\n    // --- Auth ---\n    mapping (address => uint) public wards;\n    function rely(address usr) external note auth { wards[usr] = 1; }\n    function deny(address usr) external note auth { wards[usr] = 0; }\n    modifier auth { require(wards[msg.sender] == 1); _; }\n\n    // --- Data ---\n    struct Bid {\n        uint256 bid;\n        uint256 lot;\n        address guy;  // high bidder\n        uint48  tic;  // expiry time\n        uint48  end;\n    }\n\n    mapping (uint => Bid) public bids;\n\n    VatLike  public   vat;\n    GemLike  public   gem;\n\n    uint256  constant ONE = 1.00E27;\n    uint256  public   beg = 1.05E27;  // 5% minimum bid increase\n    uint48   public   ttl = 3 hours;  // 3 hours bid lifetime\n    uint48   public   tau = 2 days;   // 2 days total auction length\n    uint256  public kicks = 0;\n    uint256  public live;\n\n    // --- Events ---\n    event Kick(\n      uint256 id,\n      uint256 lot,\n      uint256 bid,\n      address indexed gal\n    );\n\n    // --- Init ---\n    constructor(address vat_, address gem_) public {\n        wards[msg.sender] = 1;\n        vat = VatLike(vat_);\n        gem = GemLike(gem_);\n        live = 1;\n    }\n\n    // --- Math ---\n    function add(uint48 x, uint48 y) internal pure returns (uint48 z) {\n        require((z = x + y) >= x);\n    }\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x);\n    }\n\n    // --- Admin ---\n    function file(bytes32 what, uint data) external note auth {\n        if (what == \"beg\") beg = data;\n        if (what == \"ttl\") ttl = uint48(data);\n        if (what == \"tau\") tau = uint48(data);\n    }\n\n    // --- Auction ---\n    function kick(address gal, uint lot, uint bid) external auth returns (uint id) {\n        require(live == 1);\n        require(kicks < uint(-1));\n        id = ++kicks;\n\n        bids[id].bid = bid;\n        bids[id].lot = lot;\n        bids[id].guy = gal;\n        bids[id].end = add(uint48(now), tau);\n\n        emit Kick(id, lot, bid, gal);\n    }\n    function tick(uint id) external note {\n        require(bids[id].end < now);\n        require(bids[id].tic == 0);\n        bids[id].end = add(uint48(now), tau);\n    }\n    function dent(uint id, uint lot, uint bid) external note {\n        require(live == 1);\n        require(bids[id].guy != address(0));\n        require(bids[id].tic > now || bids[id].tic == 0);\n        require(bids[id].end > now);\n\n        require(bid == bids[id].bid);\n        require(lot <  bids[id].lot);\n        require(mul(beg, lot) / ONE <= bids[id].lot);  // div as lot can be huge\n\n        vat.move(msg.sender, bids[id].guy, bid);\n\n        bids[id].guy = msg.sender;\n        bids[id].lot = lot;\n        bids[id].tic = add(uint48(now), ttl);\n    }\n    function deal(uint id) external note {\n        require(live == 1);\n        require(bids[id].tic < now && bids[id].tic != 0 ||\n                bids[id].end < now);\n        gem.mint(bids[id].guy, bids[id].lot);\n        delete bids[id];\n    }\n\n    function cage() external note auth {\n       live = 0;\n    }\n    function yank(uint id) external note {\n        require(live == 0);\n        require(bids[id].guy != address(0));\n        vat.move(address(this), bids[id].guy, bids[id].bid);\n        delete bids[id];\n    }\n}","./lib.sol":"// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.4.23;\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  usr,\n        bytes32  indexed  arg1,\n        bytes32  indexed  arg2,\n        bytes             data\n    ) anonymous;\n\n    modifier note {\n        _;\n        assembly {\n            // log an 'anonymous' event with a constant 6 words of calldata\n            // and four indexed topics: selector, caller, arg1 and arg2\n            let mark := msize                         // end of memory ensures zero\n            mstore(0x40, add(mark, 288))              // update free memory pointer\n            mstore(mark, 0x20)                        // bytes type data offset\n            mstore(add(mark, 0x20), 224)              // bytes size (padded)\n            calldatacopy(add(mark, 0x40), 0, 224)     // bytes payload\n            log4(mark, 288,                           // calldata\n                 shl(224, shr(224, calldataload(0))), // msg.sig\n                 caller,                              // msg.sender\n                 calldataload(4),                     // arg1\n                 calldataload(36)                     // arg2\n                )\n        }\n    }\n}"},"version":"1.0.0"}