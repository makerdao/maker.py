{"contract_types":{"DSAuth":{"abi":[{"constant":false,"inputs":[{"name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a261071d806100a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a723058209cd7b7d7eb9279d86d489f0712e132dff324b13b764ac3cb1a1085e1873ebe400029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100675780637a9e5e4b146100aa5780638da5cb5b146100ed578063bf7e214f14610144575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019b565b005b3480156100b657600080fd5b506100eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102e6565b005b3480156100f957600080fd5b5061010261042f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015057600080fd5b50610159610455565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c9336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b151561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b610314336000357fffffffff000000000000000000000000000000000000000000000000000000001661047a565b1515610388576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104b957600190506106eb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561051857600190506106eb565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561057757600090506106eb565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b505050506040513d60208110156106d757600080fd5b810190808051906020019092919050505090505b929150505600a165627a7a723058209cd7b7d7eb9279d86d489f0712e132dff324b13b764ac3cb1a1085e1873ebe400029"}},"DSAuthEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820fb92fbb2dc0af97a7d4ce5b40acb597dd9476f491d0aa67b960d2ef94be940510029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fd00a165627a7a72305820fb92fbb2dc0af97a7d4ce5b40acb597dd9476f491d0aa67b960d2ef94be940510029"}},"DSAuthority":{"abi":[{"constant":true,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"sig","type":"bytes4"}],"name":"canCall","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"deployment_bytecode":{"bytecode":"0x"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x"}},"DSMath":{"abi":[],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820e788e19fa2696de9bd3025c0e9d1a282b73db5e0a14a8d425f7cf0fb02d016db0029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fd00a165627a7a72305820e788e19fa2696de9bd3025c0e9d1a282b73db5e0a14a8d425f7cf0fb02d016db0029"}},"DSNote":{"abi":[{"anonymous":true,"inputs":[{"indexed":true,"name":"sig","type":"bytes4"},{"indexed":true,"name":"guy","type":"address"},{"indexed":true,"name":"foo","type":"bytes32"},{"indexed":true,"name":"bar","type":"bytes32"},{"indexed":false,"name":"wad","type":"uint256"},{"indexed":false,"name":"fax","type":"bytes"}],"name":"LogNote","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058207868b26b62480107a2af1f1fa671d32d7d5b5ca31dba02e8562235c3b5a72da80029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fd00a165627a7a723058207868b26b62480107a2af1f1fa671d32d7d5b5ca31dba02e8562235c3b5a72da80029"}},"ERC20":{"abi":[{"constant":false,"inputs":[{"name":"guy","type":"address"},{"name":"wad","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"guy","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"src","type":"address"},{"name":"guy","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"guy","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"dst","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Transfer","type":"event"}],"deployment_bytecode":{"bytecode":"0x"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x"}},"ERC20Events":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"guy","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"src","type":"address"},{"indexed":true,"name":"dst","type":"address"},{"indexed":false,"name":"wad","type":"uint256"}],"name":"Transfer","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820deab1b26c301b4e7db5ab839294ec0b9dadb6a87516049e45b72a630a2e53bba0029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fd00a165627a7a72305820deab1b26c301b4e7db5ab839294ec0b9dadb6a87516049e45b72a630a2e53bba0029"}},"EventfulMarket":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogItemUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pay_amt","type":"uint256"},{"indexed":true,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_amt","type":"uint256"},{"indexed":true,"name":"buy_gem","type":"address"}],"name":"LogTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogMake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogBump","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":true,"name":"taker","type":"address"},{"indexed":false,"name":"take_amt","type":"uint128"},{"indexed":false,"name":"give_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogTake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogKill","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a7230582006dd2de36ede7c36ea608c36c7b567b858864d56ca67e9fb21182d6ff4276d580029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fd00a165627a7a7230582006dd2de36ede7c36ea608c36c7b567b858864d56ca67e9fb21182d6ff4276d580029"}},"ExpiringMarket":{"abi":[{"constant":false,"inputs":[],"name":"stop","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_gem","type":"address"},{"name":"buy_gem","type":"address"},{"name":"pay_amt","type":"uint128"},{"name":"buy_amt","type":"uint128"}],"name":"make","outputs":[{"name":"id","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"last_offer_id","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"cancel","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getOffer","outputs":[{"name":"","type":"uint256"},{"name":"","type":"address"},{"name":"","type":"uint256"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"bytes32"},{"name":"maxTakeAmount","type":"uint128"}],"name":"take","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getTime","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"close_time","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"stopped","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id_","type":"bytes32"}],"name":"bump","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"isActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"offers","outputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"},{"name":"owner","type":"address"},{"name":"timestamp","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"bytes32"}],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isClosed","outputs":[{"name":"closed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getOwner","outputs":[{"name":"owner","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"quantity","type":"uint256"}],"name":"buy","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"}],"name":"offer","outputs":[{"name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_close_time","type":"uint64"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogItemUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pay_amt","type":"uint256"},{"indexed":true,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_amt","type":"uint256"},{"indexed":true,"name":"buy_gem","type":"address"}],"name":"LogTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogMake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogBump","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":true,"name":"taker","type":"address"},{"indexed":false,"name":"take_amt","type":"uint128"},{"indexed":false,"name":"give_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogTake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogKill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50604051602080612c858339810180604052810190808051906020019092919050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a280600460016101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050612b95806100f06000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307da68f514610122578063093f51981461013957806313af4035146101f0578063232cae0b1461023357806340e58ee51461025e5780634579268a146102a35780634960645514610351578063557ed1ba1461039e5780636377ebca146103dd57806375f12b211461041c578063779997c31461044b5780637a9e5e4b1461047c57806382afd23b146104bf5780638a72ea6a146105045780638da5cb5b14610600578063b4f9b6c814610657578063bf7e214f14610688578063c2b6b58c146106df578063c41a360a1461070e578063d6febde81461077b578063f09ea2a6146107ca575b600080fd5b34801561012e57600080fd5b50610137610855565b005b34801561014557600080fd5b506101d2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610914565b60405180826000191660001916815260200191505060405180910390f35b3480156101fc57600080fd5b50610231600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610953565b005b34801561023f57600080fd5b50610248610a9e565b6040518082815260200191505060405180910390f35b34801561026a57600080fd5b5061028960048036038101908080359060200190929190505050610aa4565b604051808215151515815260200191505060405180910390f35b3480156102af57600080fd5b506102ce6004803603810190808035906020019092919050505061109a565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b34801561035d57600080fd5b5061039c600480360381019080803560001916906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919050505061111b565b005b3480156103aa57600080fd5b506103b361114a565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b3480156103e957600080fd5b506103f2611152565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b34801561042857600080fd5b5061043161116c565b604051808215151515815260200191505060405180910390f35b34801561045757600080fd5b5061047a600480360381019080803560001916906020019092919050505061117f565b005b34801561048857600080fd5b506104bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114dd565b005b3480156104cb57600080fd5b506104ea60048036038101908080359060200190929190505050611626565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b5061052f60048036038101908080359060200190929190505050611666565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b34801561060c57600080fd5b50610615611716565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561066357600080fd5b50610686600480360381019080803560001916906020019092919050505061173c565b005b34801561069457600080fd5b5061069d611757565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106eb57600080fd5b506106f461177c565b604051808215151515815260200191505060405180910390f35b34801561071a57600080fd5b50610739600480360381019080803590602001909291905050506117ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561078757600080fd5b506107b0600480360381019080803590602001909291908035906020019092919050505061180e565b604051808215151515815260200191505060405180910390f35b3480156107d657600080fd5b5061083f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612080565b6040518082815260200191505060405180910390f35b610883336000357fffffffff0000000000000000000000000000000000000000000000000000000016612735565b15156108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b6001600460096101000a81548160ff021916908315150217905550565b6000610946836fffffffffffffffffffffffffffffffff1686846fffffffffffffffffffffffffffffffff1687612080565b6001029050949350505050565b610981336000357fffffffff0000000000000000000000000000000000000000000000000000000016612735565b15156109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b60025481565b6000610aae612ae6565b82610ab881611626565b1515610ac357600080fd5b610acc816117ce565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b095750610b0861177c565b5b1515610b1457600080fd5b600460009054906101000a900460ff16151515610b3057600080fd5b6001600460006101000a81548160ff0219169083151502179055506003600085815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150600360008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff02191690555050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836080015184600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e1957600080fd5b505af1158015610e2d573d6000803e3d6000fd5b505050506040513d6020811015610e4357600080fd5b81019080805190602001909291905050501515610e5f57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488846040518082815260200191505060405180910390a1816080015173ffffffffffffffffffffffffffffffffffffffff1682602001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191685600102600019167f9577941d28fff863bfbee4694a6a4a56fb09e169619189d2eaa750b5b4819995856020015186606001518760000151886040015142604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4600192506000600460006101000a81548160ff0219169083151502179055505050919050565b600080600080600060036000878152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600201548360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450945094509450509193509193565b61113b8260019004826fffffffffffffffffffffffffffffffff1661180e565b151561114657600080fd5b5050565b600042905090565b600460019054906101000a900467ffffffffffffffff1681565b600460099054906101000a900460ff1681565b6000816001900461118f81611626565b151561119a57600080fd5b6111a261177c565b1515156111ae57600080fd5b826001900491506003600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191684600019167f70a14c213064359ede031fd2a1645a11ce2ec825ffe6ab5cfb5b160c3ef4d0a26003600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600089815260200190815260200160002060000154600360008a815260200190815260200160002060020154600360008b815260200190815260200160002060040160149054906101000a900467ffffffffffffffff16604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4505050565b61150b336000357fffffffff0000000000000000000000000000000000000000000000000000000016612735565b151561157f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b6000806003600084815260200190815260200160002060040160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900467ffffffffffffffff16905086565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6117498160019004610aa4565b151561175457600080fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460099054906101000a900460ff16806117c95750600460019054906101000a900467ffffffffffffffff1667ffffffffffffffff166117bd61114a565b67ffffffffffffffff16115b905090565b60006003600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611818612ae6565b60008461182481611626565b151561182f57600080fd5b61183761177c565b15151561184357600080fd5b600460009054906101000a900460ff1615151561185f57600080fd5b6001600460006101000a81548160ff0219169083151502179055506003600087815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050925082600001516119f68685604001516129ac565b8115156119ff57fe5b04915081826fffffffffffffffffffffffffffffffff16141515611a2257600080fd5b84856fffffffffffffffffffffffffffffffff16141515611a4257600080fd5b6000851480611a515750600082145b80611a5f5750826000015185115b80611a6d5750826040015182115b15611a7b576000935061205c565b611a89836000015186612a45565b6003600088815260200190815260200160002060000181905550611ab1836040015183612a45565b6003600088815260200190815260200160002060020181905550826060015173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560800151856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611baa57600080fd5b505af1158015611bbe573d6000803e3d6000fd5b505050506040513d6020811015611bd457600080fd5b81019080805190602001909291905050501515611bf057600080fd5b826020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611c9757600080fd5b505af1158015611cab573d6000803e3d6000fd5b505050506040513d6020811015611cc157600080fd5b81019080805190602001909291905050501515611cdd57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488866040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff16836080015173ffffffffffffffffffffffffffffffffffffffff1684602001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600019167f3383e3357c77fd2e3a4b30deea81179bc70a795d053d14d5b7f2f01d0fd4596f89600102876020015188606001518b89426040518087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390a4826060015173ffffffffffffffffffffffffffffffffffffffff16836020015173ffffffffffffffffffffffffffffffffffffffff167f819e390338feffe95e2de57172d6faf337853dfd15c7a09a32d76f7fd24438758785604051808381526020018281526020019250505060405180910390a360006003600088815260200190815260200160002060000154141561205757600360008781526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff021916905550505b600193505b6000600460006101000a81548160ff02191690831515021790555050505092915050565b600061208a612ae6565b61209261177c565b15151561209e57600080fd5b600460009054906101000a900460ff161515156120ba57600080fd5b6001600460006101000a81548160ff02191690831515021790555085866fffffffffffffffffffffffffffffffff161415156120f557600080fd5b83846fffffffffffffffffffffffffffffffff1614151561211557600080fd5b60008611151561212457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415151561216057600080fd5b60008411151561216f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156121ab57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156121e657600080fd5b8581600001818152505084816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381604001818152505082816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160a0019067ffffffffffffffff16908167ffffffffffffffff16815250506122ca612aca565b915080600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156124d257600080fd5b505af11580156124e6573d6000803e3d6000fd5b505050506040513d60208110156124fc57600080fd5b8101908080519060200190929190505050151561251857600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488826040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff168584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191683600102600019167f773ff502687307abfa024ac9f62f9752a0d210dac2ffd9a29e38e12e2ea82c8288878b8a42604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a46000600460006101000a81548160ff02191690831515021790555050949350505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561277457600190506129a6565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156127d357600190506129a6565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561283257600090506129a6565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b15801561296857600080fd5b505af115801561297c573d6000803e3d6000fd5b505050506040513d602081101561299257600080fd5b810190808051906020019092919050505090505b92915050565b6000808214806129cb575082828385029250828115156129c857fe5b04145b1515612a3f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b60008282840391508111151515612ac4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b6000600260008154809291906001019190505550600254905090565b60c06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff16815250905600a165627a7a72305820bbc6a9bc44cab97a11aceeee4c54798ca1b51e54fff69118daf350083c805f6b0029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x60806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307da68f514610122578063093f51981461013957806313af4035146101f0578063232cae0b1461023357806340e58ee51461025e5780634579268a146102a35780634960645514610351578063557ed1ba1461039e5780636377ebca146103dd57806375f12b211461041c578063779997c31461044b5780637a9e5e4b1461047c57806382afd23b146104bf5780638a72ea6a146105045780638da5cb5b14610600578063b4f9b6c814610657578063bf7e214f14610688578063c2b6b58c146106df578063c41a360a1461070e578063d6febde81461077b578063f09ea2a6146107ca575b600080fd5b34801561012e57600080fd5b50610137610855565b005b34801561014557600080fd5b506101d2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610914565b60405180826000191660001916815260200191505060405180910390f35b3480156101fc57600080fd5b50610231600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610953565b005b34801561023f57600080fd5b50610248610a9e565b6040518082815260200191505060405180910390f35b34801561026a57600080fd5b5061028960048036038101908080359060200190929190505050610aa4565b604051808215151515815260200191505060405180910390f35b3480156102af57600080fd5b506102ce6004803603810190808035906020019092919050505061109a565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b34801561035d57600080fd5b5061039c600480360381019080803560001916906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919050505061111b565b005b3480156103aa57600080fd5b506103b361114a565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b3480156103e957600080fd5b506103f2611152565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b34801561042857600080fd5b5061043161116c565b604051808215151515815260200191505060405180910390f35b34801561045757600080fd5b5061047a600480360381019080803560001916906020019092919050505061117f565b005b34801561048857600080fd5b506104bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114dd565b005b3480156104cb57600080fd5b506104ea60048036038101908080359060200190929190505050611626565b604051808215151515815260200191505060405180910390f35b34801561051057600080fd5b5061052f60048036038101908080359060200190929190505050611666565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b34801561060c57600080fd5b50610615611716565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561066357600080fd5b50610686600480360381019080803560001916906020019092919050505061173c565b005b34801561069457600080fd5b5061069d611757565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106eb57600080fd5b506106f461177c565b604051808215151515815260200191505060405180910390f35b34801561071a57600080fd5b50610739600480360381019080803590602001909291905050506117ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561078757600080fd5b506107b0600480360381019080803590602001909291908035906020019092919050505061180e565b604051808215151515815260200191505060405180910390f35b3480156107d657600080fd5b5061083f60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612080565b6040518082815260200191505060405180910390f35b610883336000357fffffffff0000000000000000000000000000000000000000000000000000000016612735565b15156108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b6001600460096101000a81548160ff021916908315150217905550565b6000610946836fffffffffffffffffffffffffffffffff1686846fffffffffffffffffffffffffffffffff1687612080565b6001029050949350505050565b610981336000357fffffffff0000000000000000000000000000000000000000000000000000000016612735565b15156109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b60025481565b6000610aae612ae6565b82610ab881611626565b1515610ac357600080fd5b610acc816117ce565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b095750610b0861177c565b5b1515610b1457600080fd5b600460009054906101000a900460ff16151515610b3057600080fd5b6001600460006101000a81548160ff0219169083151502179055506003600085815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150600360008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff02191690555050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836080015184600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e1957600080fd5b505af1158015610e2d573d6000803e3d6000fd5b505050506040513d6020811015610e4357600080fd5b81019080805190602001909291905050501515610e5f57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488846040518082815260200191505060405180910390a1816080015173ffffffffffffffffffffffffffffffffffffffff1682602001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191685600102600019167f9577941d28fff863bfbee4694a6a4a56fb09e169619189d2eaa750b5b4819995856020015186606001518760000151886040015142604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4600192506000600460006101000a81548160ff0219169083151502179055505050919050565b600080600080600060036000878152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600201548360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450945094509450509193509193565b61113b8260019004826fffffffffffffffffffffffffffffffff1661180e565b151561114657600080fd5b5050565b600042905090565b600460019054906101000a900467ffffffffffffffff1681565b600460099054906101000a900460ff1681565b6000816001900461118f81611626565b151561119a57600080fd5b6111a261177c565b1515156111ae57600080fd5b826001900491506003600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191684600019167f70a14c213064359ede031fd2a1645a11ce2ec825ffe6ab5cfb5b160c3ef4d0a26003600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600089815260200190815260200160002060000154600360008a815260200190815260200160002060020154600360008b815260200190815260200160002060040160149054906101000a900467ffffffffffffffff16604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4505050565b61150b336000357fffffffff0000000000000000000000000000000000000000000000000000000016612735565b151561157f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b6000806003600084815260200190815260200160002060040160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900467ffffffffffffffff16905086565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6117498160019004610aa4565b151561175457600080fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460099054906101000a900460ff16806117c95750600460019054906101000a900467ffffffffffffffff1667ffffffffffffffff166117bd61114a565b67ffffffffffffffff16115b905090565b60006003600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611818612ae6565b60008461182481611626565b151561182f57600080fd5b61183761177c565b15151561184357600080fd5b600460009054906101000a900460ff1615151561185f57600080fd5b6001600460006101000a81548160ff0219169083151502179055506003600087815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050925082600001516119f68685604001516129ac565b8115156119ff57fe5b04915081826fffffffffffffffffffffffffffffffff16141515611a2257600080fd5b84856fffffffffffffffffffffffffffffffff16141515611a4257600080fd5b6000851480611a515750600082145b80611a5f5750826000015185115b80611a6d5750826040015182115b15611a7b576000935061205c565b611a89836000015186612a45565b6003600088815260200190815260200160002060000181905550611ab1836040015183612a45565b6003600088815260200190815260200160002060020181905550826060015173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560800151856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611baa57600080fd5b505af1158015611bbe573d6000803e3d6000fd5b505050506040513d6020811015611bd457600080fd5b81019080805190602001909291905050501515611bf057600080fd5b826020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611c9757600080fd5b505af1158015611cab573d6000803e3d6000fd5b505050506040513d6020811015611cc157600080fd5b81019080805190602001909291905050501515611cdd57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488866040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff16836080015173ffffffffffffffffffffffffffffffffffffffff1684602001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600019167f3383e3357c77fd2e3a4b30deea81179bc70a795d053d14d5b7f2f01d0fd4596f89600102876020015188606001518b89426040518087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390a4826060015173ffffffffffffffffffffffffffffffffffffffff16836020015173ffffffffffffffffffffffffffffffffffffffff167f819e390338feffe95e2de57172d6faf337853dfd15c7a09a32d76f7fd24438758785604051808381526020018281526020019250505060405180910390a360006003600088815260200190815260200160002060000154141561205757600360008781526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff021916905550505b600193505b6000600460006101000a81548160ff02191690831515021790555050505092915050565b600061208a612ae6565b61209261177c565b15151561209e57600080fd5b600460009054906101000a900460ff161515156120ba57600080fd5b6001600460006101000a81548160ff02191690831515021790555085866fffffffffffffffffffffffffffffffff161415156120f557600080fd5b83846fffffffffffffffffffffffffffffffff1614151561211557600080fd5b60008611151561212457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415151561216057600080fd5b60008411151561216f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156121ab57600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156121e657600080fd5b8581600001818152505084816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381604001818152505082816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160a0019067ffffffffffffffff16908167ffffffffffffffff16815250506122ca612aca565b915080600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156124d257600080fd5b505af11580156124e6573d6000803e3d6000fd5b505050506040513d60208110156124fc57600080fd5b8101908080519060200190929190505050151561251857600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488826040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff168584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191683600102600019167f773ff502687307abfa024ac9f62f9752a0d210dac2ffd9a29e38e12e2ea82c8288878b8a42604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a46000600460006101000a81548160ff02191690831515021790555050949350505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561277457600190506129a6565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156127d357600190506129a6565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561283257600090506129a6565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b15801561296857600080fd5b505af115801561297c573d6000803e3d6000fd5b505050506040513d602081101561299257600080fd5b810190808051906020019092919050505090505b92915050565b6000808214806129cb575082828385029250828115156129c857fe5b04145b1515612a3f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b60008282840391508111151515612ac4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b6000600260008154809291906001019190505550600254905090565b60c06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff16815250905600a165627a7a72305820bbc6a9bc44cab97a11aceeee4c54798ca1b51e54fff69118daf350083c805f6b0029"}},"MatchingEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"name":"isEnabled","type":"bool"}],"name":"LogBuyEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"min_amount","type":"uint256"}],"name":"LogMinSell","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"isEnabled","type":"bool"}],"name":"LogMatchingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogUnsortedOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogSortedOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"keeper","type":"address"},{"indexed":false,"name":"id","type":"uint256"}],"name":"LogInsert","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"keeper","type":"address"},{"indexed":false,"name":"id","type":"uint256"}],"name":"LogDelete","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058203cc96f04f708e745e3d55799c2706382ee643dc3e0fdac4551e2d91d8b6c44450029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600080fd00a165627a7a723058203cc96f04f708e745e3d55799c2706382ee643dc3e0fdac4551e2d91d8b6c44450029"}},"MatchingMarket":{"abi":[{"constant":true,"inputs":[],"name":"matchingEnabled","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"sell_gem","type":"address"},{"name":"buy_gem","type":"address"}],"name":"getBestOffer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"pay_gem","type":"address"},{"name":"pay_amt","type":"uint256"},{"name":"buy_gem","type":"address"},{"name":"min_fill_amount","type":"uint256"}],"name":"sellAllAmount","outputs":[{"name":"fill_amt","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"stop","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_gem","type":"address"},{"name":"buy_gem","type":"address"},{"name":"pay_amt","type":"uint128"},{"name":"buy_amt","type":"uint128"}],"name":"make","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"buy_gem","type":"address"},{"name":"pay_gem","type":"address"},{"name":"pay_amt","type":"uint256"}],"name":"getBuyAmount","outputs":[{"name":"fill_amt","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"},{"name":"pos","type":"uint256"}],"name":"offer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"pos","type":"uint256"}],"name":"insert","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"last_offer_id","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"matchingEnabled_","type":"bool"}],"name":"setMatchingEnabled","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"cancel","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getOffer","outputs":[{"name":"","type":"uint256"},{"name":"","type":"address"},{"name":"","type":"uint256"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"del_rank","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"bytes32"},{"name":"maxTakeAmount","type":"uint128"}],"name":"take","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"pay_gem","type":"address"}],"name":"getMinSell","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTime","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"dustId","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getNextUnsortedOffer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"close_time","outputs":[{"name":"","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"}],"name":"_span","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"}],"name":"_best","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"stopped","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id_","type":"bytes32"}],"name":"bump","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"sell_gem","type":"address"},{"name":"buy_gem","type":"address"}],"name":"getOfferCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"buy_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"max_fill_amount","type":"uint256"}],"name":"buyAllAmount","outputs":[{"name":"fill_amt","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"isActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"offers","outputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"},{"name":"owner","type":"address"},{"name":"timestamp","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getFirstUnsortedOffer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getBetterOffer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"_dust","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getWorseOffer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"_near","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"bytes32"}],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_gem","type":"address"},{"name":"dust","type":"uint256"}],"name":"setMinSell","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isClosed","outputs":[{"name":"closed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"_rank","outputs":[{"name":"next","type":"uint256"},{"name":"prev","type":"uint256"},{"name":"delb","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getOwner","outputs":[{"name":"owner","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"isOfferSorted","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"buyEnabled_","type":"bool"}],"name":"setBuyEnabled","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"amount","type":"uint256"}],"name":"buy","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"},{"name":"pos","type":"uint256"},{"name":"rounding","type":"bool"}],"name":"offer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"}],"name":"offer","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"buyEnabled","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"pay_gem","type":"address"},{"name":"buy_gem","type":"address"},{"name":"buy_amt","type":"uint256"}],"name":"getPayAmount","outputs":[{"name":"fill_amt","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"close_time","type":"uint64"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"name":"sig","type":"bytes4"},{"indexed":true,"name":"guy","type":"address"},{"indexed":true,"name":"foo","type":"bytes32"},{"indexed":true,"name":"bar","type":"bytes32"},{"indexed":false,"name":"wad","type":"uint256"},{"indexed":false,"name":"fax","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogItemUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pay_amt","type":"uint256"},{"indexed":true,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_amt","type":"uint256"},{"indexed":true,"name":"buy_gem","type":"address"}],"name":"LogTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogMake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogBump","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":true,"name":"taker","type":"address"},{"indexed":false,"name":"take_amt","type":"uint128"},{"indexed":false,"name":"give_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogTake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogKill","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"isEnabled","type":"bool"}],"name":"LogBuyEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"min_amount","type":"uint256"}],"name":"LogMinSell","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"isEnabled","type":"bool"}],"name":"LogMatchingEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogUnsortedOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogSortedOffer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"keeper","type":"address"},{"indexed":false,"name":"id","type":"uint256"}],"name":"LogInsert","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"keeper","type":"address"},{"indexed":false,"name":"id","type":"uint256"}],"name":"LogDelete","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x608060405260016004600a6101000a81548160ff02191690831515021790555060016004600b6101000a81548160ff02191690831515021790555034801561004657600080fd5b5060405160208062006181833981018060405281019080805190602001909291905050508033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a280600460016101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050616057806200012a6000396000f300608060405260043610610246576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301492a0b1461024b5780630374fc6f1461027a5780630621b4f6146102f157806307da68f51461037c578063093f51981461039357806313af40351461044a578063144a27521461048d5780631b33d4121461050e5780631d834a1b146105a3578063232cae0b146105f25780632aed19051461061d57806340e58ee5146106645780634579268a146106a9578063467f0b7b14610757578063496064551461079c578063511fa487146107e9578063557ed1ba1461084057806356ad87641461087f57806361f54a79146108aa5780636377ebca146108eb578063677170e11461092a57806374c1d7d3146109a157806375f12b2114610a18578063779997c314610a475780637a9e5e4b14610a785780637ca9429a14610abb5780638185402b14610b3257806382afd23b14610bbd5780638a72ea6a14610c025780638af82a2e14610cfe5780638da5cb5b14610d29578063911550f414610d8057806391be90c814610dc1578063943911bc14610e18578063a78d431614610e59578063b4f9b6c814610e9a578063bf7c734e14610ecb578063bf7e214f14610f30578063c2b6b58c14610f87578063c2d526aa14610fb6578063c41a360a14611005578063d2b420ce14611072578063d6f15469146110b7578063d6febde8146110fe578063e1a6f0141461114d578063f09ea2a6146111ee578063f582d29314611279578063ff1fd974146112a8575b600080fd5b34801561025757600080fd5b50610260611329565b604051808215151515815260200191505060405180910390f35b34801561028657600080fd5b506102db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061133c565b6040518082815260200191505060405180910390f35b3480156102fd57600080fd5b50610366600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113c3565b6040518082815260200191505060405180910390f35b34801561038857600080fd5b506103916115dc565b005b34801561039f57600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919050505061169b565b60405180826000191660001916815260200191505060405180910390f35b34801561045657600080fd5b5061048b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116da565b005b34801561049957600080fd5b506104f8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611825565b6040518082815260200191505060405180910390f35b34801561051a57600080fd5b5061058d60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611928565b6040518082815260200191505060405180910390f35b3480156105af57600080fd5b506105d86004803603810190808035906020019092919080359060200190929190505050611958565b604051808215151515815260200191505060405180910390f35b3480156105fe57600080fd5b50610607611a91565b6040518082815260200191505060405180910390f35b34801561062957600080fd5b5061064a600480360381019080803515159060200190929190505050611a97565b604051808215151515815260200191505060405180910390f35b34801561067057600080fd5b5061068f60048036038101908080359060200190929190505050611ba8565b604051808215151515815260200191505060405180910390f35b3480156106b557600080fd5b506106d460048036038101908080359060200190929190505050611e6e565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b34801561076357600080fd5b5061078260048036038101908080359060200190929190505050611eef565b604051808215151515815260200191505060405180910390f35b3480156107a857600080fd5b506107e7600480360381019080803560001916906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050612074565b005b3480156107f557600080fd5b5061082a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120a3565b6040518082815260200191505060405180910390f35b34801561084c57600080fd5b506108556120ec565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b34801561088b57600080fd5b506108946120f4565b6040518082815260200191505060405180910390f35b3480156108b657600080fd5b506108d5600480360381019080803590602001909291905050506120fa565b6040518082815260200191505060405180910390f35b3480156108f757600080fd5b50610900612117565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b34801561093657600080fd5b5061098b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612131565b6040518082815260200191505060405180910390f35b3480156109ad57600080fd5b50610a02600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612156565b6040518082815260200191505060405180910390f35b348015610a2457600080fd5b50610a2d61217b565b604051808215151515815260200191505060405180910390f35b348015610a5357600080fd5b50610a76600480360381019080803560001916906020019092919050505061218e565b005b348015610a8457600080fd5b50610ab9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124ec565b005b348015610ac757600080fd5b50610b1c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612635565b6040518082815260200191505060405180910390f35b348015610b3e57600080fd5b50610ba7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506126bc565b6040518082815260200191505060405180910390f35b348015610bc957600080fd5b50610be8600480360381019080803590602001909291905050506128cf565b604051808215151515815260200191505060405180910390f35b348015610c0e57600080fd5b50610c2d6004803603810190808035906020019092919050505061290f565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b348015610d0a57600080fd5b50610d136129bf565b6040518082815260200191505060405180910390f35b348015610d3557600080fd5b50610d3e6129c9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8c57600080fd5b50610dab600480360381019080803590602001909291905050506129ef565b6040518082815260200191505060405180910390f35b348015610dcd57600080fd5b50610e02600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a0f565b6040518082815260200191505060405180910390f35b348015610e2457600080fd5b50610e4360048036038101908080359060200190929190505050612a27565b6040518082815260200191505060405180910390f35b348015610e6557600080fd5b50610e8460048036038101908080359060200190929190505050612a47565b6040518082815260200191505060405180910390f35b348015610ea657600080fd5b50610ec96004803603810190808035600019169060200190929190505050612a5f565b005b348015610ed757600080fd5b50610f16600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612a7a565b604051808215151515815260200191505060405180910390f35b348015610f3c57600080fd5b50610f45612c8a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f9357600080fd5b50610f9c612caf565b604051808215151515815260200191505060405180910390f35b348015610fc257600080fd5b50610fe160048036038101908080359060200190929190505050612d01565b60405180848152602001838152602001828152602001935050505060405180910390f35b34801561101157600080fd5b5061103060048036038101908080359060200190929190505050612d2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561107e57600080fd5b5061109d60048036038101908080359060200190929190505050612d6b565b604051808215151515815260200191505060405180910390f35b3480156110c357600080fd5b506110e4600480360381019080803515159060200190929190505050612ea2565b604051808215151515815260200191505060405180910390f35b34801561110a57600080fd5b506111336004803603810190808035906020019092919080359060200190929190505050612fb3565b604051808215151515815260200191505060405180910390f35b34801561115957600080fd5b506111d860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035151590602001909291905050506130a0565b6040518082815260200191505060405180910390f35b3480156111fa57600080fd5b5061126360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131cc565b6040518082815260200191505060405180910390f35b34801561128557600080fd5b5061128e613293565b604051808215151515815260200191505060405180910390f35b3480156112b457600080fd5b50611313600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506132a6565b6040518082815260200191505060405180910390f35b6004600b9054906101000a900460ff1681565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806000600460009054906101000a900460ff1615151561144d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b5b60008611156115c357611461858861133c565b91506000821415151561147357600080fd5b6114a9600360008481526020019081526020016000206002015460036000858152602001908152602001600020600001546133a9565b670de0b6b3a7640000870210156114bf576115c3565b60036000838152602001908152602001600020600201548610151561154a576114fe8360036000858152602001908152602001600020600001546133e5565b925061152086600360008581526020019081526020016000206002015461346a565b9550611545826001026003600085815260200190815260200160002060000154612074565b6115be565b633b9aca00611594633b9aca00880261158f600360008781526020019081526020016000206000015460036000888152602001908152602001600020600201546134ef565b61352f565b81151561159d57fe5b0490506115aa83826133e5565b92506115b98260010282612074565b600095505b61144e565b8383101515156115d257600080fd5b5050949350505050565b61160a336000357fffffffff000000000000000000000000000000000000000000000000000000001661357b565b151561167e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b6001600460096101000a81548160ff021916908315150217905550565b60006116cd836fffffffffffffffffffffffffffffffff1686846fffffffffffffffffffffffffffffffff16876131cc565b6001029050949350505050565b611708336000357fffffffff000000000000000000000000000000000000000000000000000000001661357b565b151561177c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b600080611832858561133c565b90505b60036000828152602001908152602001600020600201548311156118c1576118738260036000848152602001908152602001600020600001546133e5565b915061189583600360008481526020019081526020016000206002015461346a565b925060008311156118bc576118a981612a27565b9050600081141515156118bb57600080fd5b5b611835565b61191e82633b9aca0061190f633b9aca00870261190a600360008881526020019081526020016000206000015460036000898152602001908152602001600020600201546134ef565b61352f565b81151561191857fe5b046133e5565b9150509392505050565b6000611932612caf565b15151561193e57600080fd5b61194d868686868660016130a0565b905095945050505050565b6000600460009054906101000a900460ff161515156119df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b6119e883612d6b565b1515156119f457600080fd5b6119fd836128cf565b1515611a0857600080fd5b611a11836137f2565b50611a1c83836138f0565b7f6d5c16212bdea16850dce4d9fa2314c446bd30ce84700d9c36c7677c6d2839403384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001905092915050565b60025481565b6000611ac7336000357fffffffff000000000000000000000000000000000000000000000000000000001661357b565b1515611b3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b816004600b6101000a81548160ff0219169083151502179055507fea11e00ec1642be9b494019b756440e2c57dbe9e59242c4f9c64ce33fb4f41d96004600b9054906101000a900460ff16604051808215151515815260200191505060405180910390a160019050919050565b600081611bb4816128cf565b1515611c4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001807f4f66666572207761732064656c65746564206f722074616b656e2c206f72206e81526020017f6576657220657869737465642e0000000000000000000000000000000000000081525060400191505060405180910390fd5b611c56612caf565b80611c945750611c6581612d2b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80611ca05750600b5481145b1515611d86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260748152602001807f4f666665722063616e206e6f742062652063616e63656c6c656420626563617581526020017f73652075736572206973206e6f74206f776e65722c20616e64206d61726b657481526020017f206973206f70656e2c20616e64206f666665722073656c6c732072657175697281526020017f656420616d6f756e74206f6620746f6b656e732e00000000000000000000000081525060800191505060405180910390fd5b600460009054906101000a900460ff16151515611e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b6004600b9054906101000a900460ff1615611e5d57611e2983612d6b565b15611e4757611e3783613cf3565b1515611e4257600080fd5b611e5c565b611e50836137f2565b1515611e5b57600080fd5b5b5b611e6683614123565b915050919050565b600080600080600060036000878152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600201548360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450945094509450509193509193565b6000600460009054906101000a900460ff16151515611f76576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b611f7f826128cf565b158015611fa357506000600560008481526020019081526020016000206002015414155b8015611fc75750600a43036005600084815260200190815260200160002060020154105b1515611fd257600080fd5b600560008381526020019081526020016000206000808201600090556001820160009055600282016000905550507fcb9d6176c6aac6478ebb9a2754cdce22a944de29ed1f2642f8613884eba4b40c3383604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160019050919050565b6120948260019004826fffffffffffffffffffffffffffffffff16612fb3565b151561209f57600080fd5b5050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600042905090565b600b5481565b600060096000838152602001908152602001600020549050919050565b600460019054906101000a900467ffffffffffffffff1681565b6007602052816000526040600020602052806000526040600020600091509150505481565b6006602052816000526040600020602052806000526040600020600091509150505481565b600460099054906101000a900460ff1681565b6000816001900461219e816128cf565b15156121a957600080fd5b6121b1612caf565b1515156121bd57600080fd5b826001900491506003600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191684600019167f70a14c213064359ede031fd2a1645a11ce2ec825ffe6ab5cfb5b160c3ef4d0a26003600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003600089815260200190815260200160002060000154600360008a815260200190815260200160002060020154600360008b815260200190815260200160002060040160149054906101000a900467ffffffffffffffff16604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4505050565b61251a336000357fffffffff000000000000000000000000000000000000000000000000000000001661357b565b151561258e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080600460009054906101000a900460ff16151515612744576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b5b60008511156128b757612758868561133c565b90506000811415151561276a57600080fd5b6127a0600360008381526020019081526020016000206000015460036000848152602001908152602001600020600201546133a9565b670de0b6b3a7640000860210156127b6576128b7565b600360008281526020019081526020016000206000015485101515612841576127f58260036000848152602001908152602001600020600201546133e5565b915061281785600360008481526020019081526020016000206000015461346a565b945061283c816001026003600084815260200190815260200160002060000154612074565b6128b2565b61289e82633b9aca0061288f633b9aca00890261288a600360008881526020019081526020016000206002015460036000898152602001908152602001600020600001546134ef565b61352f565b81151561289857fe5b046133e5565b91506128ad8160010286612074565b600094505b612745565b8282111515156128c657600080fd5b50949350505050565b6000806003600084815260200190815260200160002060040160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900467ffffffffffffffff16905086565b6000600a54905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060056000838152602001908152602001600020600001549050919050565b60086020528060005260406000206000915090505481565b600060056000838152602001908152602001600020600101549050919050565b60096020528060005260406000206000915090505481565b612a6c8160019004611ba8565b1515612a7757600080fd5b50565b6000612aaa336000357fffffffff000000000000000000000000000000000000000000000000000000001661357b565b1515612b1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b600080600060043592506024359150349050816000191683600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a484600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fc28d56449b0bb31e64ee7487e061f57a2e72aea8019d810832f26dda099823d08686604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001935050505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460099054906101000a900460ff1680612cfc5750600460019054906101000a900467ffffffffffffffff1667ffffffffffffffff16612cf06120ec565b67ffffffffffffffff16115b905090565b60056020528060005260406000206000915090508060000154908060010154908060020154905083565b60006003600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806005600084815260200190815260200160002060000154141580612da957506000600560008481526020019081526020016000206001015414155b80612e9b575081600660006003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006003600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b9050919050565b6000612ed2336000357fffffffff000000000000000000000000000000000000000000000000000000001661357b565b1515612f46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d617574682d756e617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b816004600a6101000a81548160ff0219169083151502179055507f7089e4f0bcc948f9f723a361590c32d9c2284da7ab1981b1249ad2edb9f953c16004600a9054906101000a900460ff16604051808215151515815260200191505060405180910390a160019050919050565b6000615fa683612fc2816128cf565b1515612fcd57600080fd5b612fd5612caf565b151515612fe157600080fd5b600460009054906101000a900460ff16151515613066576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b6004600b9054906101000a900460ff166130825761488f613086565b6151015b915061309685858463ffffffff16565b9250505092915050565b60006130aa612caf565b1515156130b657600080fd5b600460009054906101000a900460ff1615151561313b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b86600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115151561318957600080fd5b6004600b9054906101000a900460ff16156131b3576131ac87878787878761523a565b90506131c2565b6131bf87878787615495565b90505b9695505050505050565b6000615fa6600460009054906101000a900460ff16151515613256576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f5265656e7472616e637920617474656d7074000000000000000000000000000081525060200191505060405180910390fd5b6004600b9054906101000a900460ff1661327257615495613276565b615b4a5b9050613288868686868563ffffffff16565b915050949350505050565b6004600a9054906101000a900460ff1681565b6000806132b3848661133c565b90505b6003600082815260200190815260200160002060000154831115613342576132f48260036000848152602001908152602001600020600201546133e5565b915061331683600360008481526020019081526020016000206000015461346a565b9250600083111561333d5761332a81612a27565b90506000811415151561333c57600080fd5b5b6132b6565b61339f82633b9aca00613390633b9aca00870261338b600360008881526020019081526020016000206002015460036000898152602001908152602001600020600001546134ef565b61352f565b81151561339957fe5b046133e5565b9150509392505050565b6000816133d36133c185670de0b6b3a7640000615c08565b6002858115156133cd57fe5b046133e5565b8115156133dc57fe5b04905092915050565b60008282840191508110151515613464576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600082828403915081111515156134e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60008161351d61350b856b033b2e3c9fd0803ce8000000615c08565b60028581151561351757fe5b046133e5565b81151561352657fe5b04905092915050565b60006b033b2e3c9fd0803ce800000061356961354b8585615c08565b60026b033b2e3c9fd0803ce800000081151561356357fe5b046133e5565b81151561357257fe5b04905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156135ba57600190506137ec565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561361957600190506137ec565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561367857600090506137ec565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019350505050602060405180830381600087803b1580156137ae57600080fd5b505af11580156137c2573d6000803e3d6000fd5b505050506040513d60208110156137d857600080fd5b810190808051906020019092919050505090505b92915050565b6000806000600a54915081905061380884612d6b565b15151561381457600080fd5b83600a54141561385a576009600085815260200190815260200160002054600a8190555060006009600086815260200190815260200160002081905550600192506138e9565b5b60008211801561386b5750838214155b1561388e578190506009600083815260200190815260200160002054915061385b565b83821415156138a057600092506138e9565b6009600085815260200190815260200160002054600960008381526020019081526020016000208190555060006009600086815260200190815260200160002081905550600192505b5050919050565b60008060006138fe856128cf565b151561390957600080fd5b6003600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060008414806139ec57508173ffffffffffffffffffffffffffffffffffffffff166003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80613a5957508273ffffffffffffffffffffffffffffffffffffffff166003600086815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80613a6a5750613a6884612d6b565b155b613a7d57613a788585615ca1565b613a87565b613a8685615da3565b5b9350600084141515613ae75760056000858152602001908152602001600020600101549050846005600086815260200190815260200160002060010181905550836005600087815260200190815260200160002060000181905550613be8565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600081141515613c29578460056000838152602001908152602001600020600001819055508060056000878152602001908152602001600020600101819055505b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f20fb9bad86c18f7e22e8065258790d9416a7d2df8ff05f80f82c46d38b925acd856040518082815260200191505060405180910390a15050505050565b60008060006003600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506003600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111515613df557600080fd5b60006005600086815260200190815260200160002060020154148015613e205750613e1f84612d6b565b5b1515613e2b57600080fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484141515613f365783600560006005600088815260200190815260200160002060000154815260200190815260200160002060010154141515613eea57600080fd5b6005600085815260200190815260200160002060010154600560006005600088815260200190815260200160002060000154815260200190815260200160002060010181905550613fce565b6005600085815260200190815260200160002060010154600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60006005600086815260200190815260200160002060010154141515614070578360056000600560008881526020019081526020016000206001015481526020019081526020016000206000015414151561402857600080fd5b60056000858152602001908152602001600020600001546005600060056000888152602001908152602001600020600101548152602001908152602001600020600001819055505b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550436005600086815260200190815260200160002060020181905550600192505050919050565b600061412d615fa8565b82614137816128cf565b15156141d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001807f4f66666572207761732064656c65746564206f722074616b656e2c206f72206e81526020017f6576657220657869737465642e0000000000000000000000000000000000000081525060400191505060405180910390fd5b6141d9612caf565b8061421757506141e881612d2b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806142235750600b5481145b1515614309576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260748152602001807f4f666665722063616e206e6f742062652063616e63656c6c656420626563617581526020017f73652075736572206973206e6f74206f776e65722c20616e64206d61726b657481526020017f206973206f70656e2c20616e64206f666665722073656c6c732072657175697281526020017f656420616d6f756e74206f6620746f6b656e732e00000000000000000000000081525060800191505060405180910390fd5b600460009054906101000a900460ff1615151561432557600080fd5b6001600460006101000a81548160ff0219169083151502179055506003600085815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150600360008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff02191690555050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836080015184600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561460e57600080fd5b505af1158015614622573d6000803e3d6000fd5b505050506040513d602081101561463857600080fd5b8101908080519060200190929190505050151561465457600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488846040518082815260200191505060405180910390a1816080015173ffffffffffffffffffffffffffffffffffffffff1682602001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191685600102600019167f9577941d28fff863bfbee4694a6a4a56fb09e169619189d2eaa750b5b4819995856020015186606001518760000151886040015142604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4600192506000600460006101000a81548160ff0219169083151502179055505050919050565b6000614899615fa8565b6000846148a5816128cf565b15156148b057600080fd5b6148b8612caf565b1515156148c457600080fd5b600460009054906101000a900460ff161515156148e057600080fd5b6001600460006101000a81548160ff0219169083151502179055506003600087815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505092508260000151614a77868560400151615c08565b811515614a8057fe5b04915081826fffffffffffffffffffffffffffffffff16141515614aa357600080fd5b84856fffffffffffffffffffffffffffffffff16141515614ac357600080fd5b6000851480614ad25750600082145b80614ae05750826000015185115b80614aee5750826040015182115b15614afc57600093506150dd565b614b0a83600001518661346a565b6003600088815260200190815260200160002060000181905550614b3283604001518361346a565b6003600088815260200190815260200160002060020181905550826060015173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560800151856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015614c2b57600080fd5b505af1158015614c3f573d6000803e3d6000fd5b505050506040513d6020811015614c5557600080fd5b81019080805190602001909291905050501515614c7157600080fd5b826020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015614d1857600080fd5b505af1158015614d2c573d6000803e3d6000fd5b505050506040513d6020811015614d4257600080fd5b81019080805190602001909291905050501515614d5e57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488866040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff16836080015173ffffffffffffffffffffffffffffffffffffffff1684602001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600019167f3383e3357c77fd2e3a4b30deea81179bc70a795d053d14d5b7f2f01d0fd4596f89600102876020015188606001518b89426040518087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390a4826060015173ffffffffffffffffffffffffffffffffffffffff16836020015173ffffffffffffffffffffffffffffffffffffffff167f819e390338feffe95e2de57172d6faf337853dfd15c7a09a32d76f7fd24438758785604051808381526020018281526020019250505060405180910390a36000600360008881526020019081526020016000206000015414156150d857600360008781526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff021916905550505b600193505b6000600460006101000a81548160ff02191690831515021790555050505092915050565b60006004600a9054906101000a900460ff16151561511e57600080fd5b60036000848152602001908152602001600020600001548214156151655761514583612d6b565b156151595761515383613cf3565b50615164565b615162836137f2565b505b5b61516f838361488f565b151561517a57600080fd5b615183836128cf565b80156152195750600860006003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546003600085815260200190815260200160002060000154105b156152305782600b8190555061522e83611ba8565b505b6001905092915050565b60008060008060005b6000600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561540e57600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935060036000858152602001908152602001600020600201549150600360008581526020019081526020016000206000015490508561538557600061538d565b808b8a840101015b6153978c83615c08565b016153a2838b615c08565b11156153ad5761540e565b6153c0846153bb838c615ef8565b612fb3565b508892506153d7896153d2838c615ef8565b61346a565b9850826153e48a8d615c08565b8115156153ed57fe5b049a5060008b14806153ff5750600089145b156154095761540e565b615243565b60008911801561541e575060008b115b80156154695750600860008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548b10155b156154875761547a8b8b8b8b615495565b945061548685886138f0565b5b505050509695505050505050565b600061549f615fa8565b6154a7612caf565b1515156154b357600080fd5b600460009054906101000a900460ff161515156154cf57600080fd5b6001600460006101000a81548160ff02191690831515021790555085866fffffffffffffffffffffffffffffffff1614151561550a57600080fd5b83846fffffffffffffffffffffffffffffffff1614151561552a57600080fd5b60008611151561553957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415151561557557600080fd5b60008411151561558457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156155c057600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156155fb57600080fd5b8581600001818152505084816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381604001818152505082816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160a0019067ffffffffffffffff16908167ffffffffffffffff16815250506156df615f12565b915080600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156158e757600080fd5b505af11580156158fb573d6000803e3d6000fd5b505050506040513d602081101561591157600080fd5b8101908080519060200190929190505050151561592d57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488826040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff168584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191683600102600019167f773ff502687307abfa024ac9f62f9752a0d210dac2ffd9a29e38e12e2ea82c8288878b8a42604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a46000600460006101000a81548160ff02191690831515021790555050949350505050565b600084600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411151515615b9a57600080fd5b615ba685858585615495565b9050600a54600960008381526020019081526020016000208190555080600a819055507f8173832a493e0a3989e521458e55bfe9feac9f9b675a94e100b9d5a85f814862816040518082815260200191505060405180910390a1949350505050565b600080821480615c2757508282838502925082811515615c2457fe5b04145b1515615c9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b600080600084111515615cb357600080fd5b5b60008314158015615ccb5750615cc9836128cf565b155b15615cee5760056000848152602001908152602001600020600101549250615cb4565b6000831415615d0757615d0084615da3565b9150615d9c565b615d118484615f2e565b15615d5c575b60008314158015615d2e5750615d2d8484615f2e565b5b15615d545782905060056000848152602001908152602001600020600101549250615d17565b809150615d9c565b5b60008314158015615d755750615d738484615f2e565b155b15615d985760056000848152602001908152602001600020600001549250615d5d565b8291505b5092915050565b60008060008060008086111515615db957600080fd5b6003600087815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693506003600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549150600090505b60008214158015615ec65750615ec58683615f2e565b5b15615eec5781905060056000838152602001908152602001600020600101549150615eaf565b80945050505050919050565b600081831115615f085781615f0a565b825b905092915050565b6000600260008154809291906001019190505550600254905090565b6000615f6660036000848152602001908152602001600020600201546003600086815260200190815260200160002060000154615c08565b615f9c60036000868152602001908152602001600020600201546003600086815260200190815260200160002060000154615c08565b1015905092915050565bfe5b60c06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff16815250905600a165627a7a7230582006ebcd6f830aab356803cb338dc811815019ed83300ad9b18d4fc94deeb1150e0029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":""}},"SimpleMarket":{"abi":[{"constant":false,"inputs":[{"name":"pay_gem","type":"address"},{"name":"buy_gem","type":"address"},{"name":"pay_amt","type":"uint128"},{"name":"buy_amt","type":"uint128"}],"name":"make","outputs":[{"name":"id","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"last_offer_id","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"}],"name":"cancel","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getOffer","outputs":[{"name":"","type":"uint256"},{"name":"","type":"address"},{"name":"","type":"uint256"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"bytes32"},{"name":"maxTakeAmount","type":"uint128"}],"name":"take","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id_","type":"bytes32"}],"name":"bump","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"isActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"offers","outputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"},{"name":"owner","type":"address"},{"name":"timestamp","type":"uint64"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"bytes32"}],"name":"kill","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"getOwner","outputs":[{"name":"owner","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"quantity","type":"uint256"}],"name":"buy","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"pay_amt","type":"uint256"},{"name":"pay_gem","type":"address"},{"name":"buy_amt","type":"uint256"},{"name":"buy_gem","type":"address"}],"name":"offer","outputs":[{"name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"uint256"}],"name":"LogItemUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pay_amt","type":"uint256"},{"indexed":true,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_amt","type":"uint256"},{"indexed":true,"name":"buy_gem","type":"address"}],"name":"LogTrade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogMake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogBump","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":true,"name":"taker","type":"address"},{"indexed":false,"name":"take_amt","type":"uint128"},{"indexed":false,"name":"give_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogTake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"pair","type":"bytes32"},{"indexed":true,"name":"maker","type":"address"},{"indexed":false,"name":"pay_gem","type":"address"},{"indexed":false,"name":"buy_gem","type":"address"},{"indexed":false,"name":"pay_amt","type":"uint128"},{"indexed":false,"name":"buy_amt","type":"uint128"},{"indexed":false,"name":"timestamp","type":"uint64"}],"name":"LogKill","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.4.26+commit.4563c3fc"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50612223806100206000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063093f5198146100bf578063232cae0b1461017657806340e58ee5146101a15780634579268a146101e65780634960645514610294578063779997c3146102e157806382afd23b146103125780638a72ea6a14610357578063b4f9b6c814610453578063c41a360a14610484578063d6febde8146104f1578063f09ea2a614610540575b600080fd5b3480156100cb57600080fd5b50610158600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff1690602001909291905050506105cb565b60405180826000191660001916815260200191505060405180910390f35b34801561018257600080fd5b5061018b61060a565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b506101cc60048036038101908080359060200190929190505050610610565b604051808215151515815260200191505060405180910390f35b3480156101f257600080fd5b5061021160048036038101908080359060200190929190505050610bf7565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b3480156102a057600080fd5b506102df600480360381019080803560001916906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610c78565b005b3480156102ed57600080fd5b506103106004803603810190808035600019169060200190929190505050610ca7565b005b34801561031e57600080fd5b5061033d60048036038101908080359060200190929190505050610ff1565b604051808215151515815260200191505060405180910390f35b34801561036357600080fd5b5061038260048036038101908080359060200190929190505050611031565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b34801561045f57600080fd5b5061048260048036038101908080356000191690602001909291905050506110e1565b005b34801561049057600080fd5b506104af600480360381019080803590602001909291905050506110fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104fd57600080fd5b50610526600480360381019080803590602001909291908035906020019092919050505061113c565b604051808215151515815260200191505060405180910390f35b34801561054c57600080fd5b506105b560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061199a565b6040518082815260200191505060405180910390f35b60006105fd836fffffffffffffffffffffffffffffffff1686846fffffffffffffffffffffffffffffffff168761199a565b6001029050949350505050565b60005481565b600061061a612174565b8261062481610ff1565b151561062f57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1661064f826110fc565b73ffffffffffffffffffffffffffffffffffffffff1614151561067157600080fd5b600260009054906101000a900460ff1615151561068d57600080fd5b6001600260006101000a81548160ff0219169083151502179055506001600085815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150600160008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff02191690555050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836080015184600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561097657600080fd5b505af115801561098a573d6000803e3d6000fd5b505050506040513d60208110156109a057600080fd5b810190808051906020019092919050505015156109bc57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488846040518082815260200191505060405180910390a1816080015173ffffffffffffffffffffffffffffffffffffffff1682602001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191685600102600019167f9577941d28fff863bfbee4694a6a4a56fb09e169619189d2eaa750b5b4819995856020015186606001518760000151886040015142604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4600192506000600260006101000a81548160ff0219169083151502179055505050919050565b600080600080600060016000878152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600201548360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450945094509450509193509193565b610c988260019004826fffffffffffffffffffffffffffffffff1661113c565b1515610ca357600080fd5b5050565b60008160019004610cb781610ff1565b1515610cc257600080fd5b826001900491506001600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191684600019167f70a14c213064359ede031fd2a1645a11ce2ec825ffe6ab5cfb5b160c3ef4d0a26001600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600089815260200190815260200160002060000154600160008a815260200190815260200160002060020154600160008b815260200190815260200160002060040160149054906101000a900467ffffffffffffffff16604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4505050565b6000806001600084815260200190815260200160002060040160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900467ffffffffffffffff16905086565b6110ee8160019004610610565b15156110f957600080fd5b50565b60006001600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611146612174565b60008461115281610ff1565b151561115d57600080fd5b600260009054906101000a900460ff1615151561117957600080fd5b6001600260006101000a81548160ff0219169083151502179055506001600087815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509250826000015161131086856040015161203b565b81151561131957fe5b04915081826fffffffffffffffffffffffffffffffff1614151561133c57600080fd5b84856fffffffffffffffffffffffffffffffff1614151561135c57600080fd5b600085148061136b5750600082145b806113795750826000015185115b806113875750826040015182115b156113955760009350611976565b6113a38360000151866120d4565b60016000888152602001908152602001600020600001819055506113cb8360400151836120d4565b6001600088815260200190815260200160002060020181905550826060015173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560800151856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156114c457600080fd5b505af11580156114d8573d6000803e3d6000fd5b505050506040513d60208110156114ee57600080fd5b8101908080519060200190929190505050151561150a57600080fd5b826020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115b157600080fd5b505af11580156115c5573d6000803e3d6000fd5b505050506040513d60208110156115db57600080fd5b810190808051906020019092919050505015156115f757600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488866040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff16836080015173ffffffffffffffffffffffffffffffffffffffff1684602001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600019167f3383e3357c77fd2e3a4b30deea81179bc70a795d053d14d5b7f2f01d0fd4596f89600102876020015188606001518b89426040518087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390a4826060015173ffffffffffffffffffffffffffffffffffffffff16836020015173ffffffffffffffffffffffffffffffffffffffff167f819e390338feffe95e2de57172d6faf337853dfd15c7a09a32d76f7fd24438758785604051808381526020018281526020019250505060405180910390a360006001600088815260200190815260200160002060000154141561197157600160008781526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff021916905550505b600193505b6000600260006101000a81548160ff02191690831515021790555050505092915050565b60006119a4612174565b600260009054906101000a900460ff161515156119c057600080fd5b6001600260006101000a81548160ff02191690831515021790555085866fffffffffffffffffffffffffffffffff161415156119fb57600080fd5b83846fffffffffffffffffffffffffffffffff16141515611a1b57600080fd5b600086111515611a2a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515611a6657600080fd5b600084111515611a7557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611ab157600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515611aec57600080fd5b8581600001818152505084816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381604001818152505082816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160a0019067ffffffffffffffff16908167ffffffffffffffff1681525050611bd0612159565b915080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611dd857600080fd5b505af1158015611dec573d6000803e3d6000fd5b505050506040513d6020811015611e0257600080fd5b81019080805190602001909291905050501515611e1e57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488826040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff168584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191683600102600019167f773ff502687307abfa024ac9f62f9752a0d210dac2ffd9a29e38e12e2ea82c8288878b8a42604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a46000600260006101000a81548160ff02191690831515021790555050949350505050565b60008082148061205a5750828283850292508281151561205757fe5b04145b15156120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b60008282840391508111151515612153576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60008060008154809291906001019190505550600054905090565b60c06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff16815250905600a165627a7a72305820f8a82e968fc3e532a7a06a770df21f2ea7d9b37d37bf1a7896fef71fbae4998f0029"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063093f5198146100bf578063232cae0b1461017657806340e58ee5146101a15780634579268a146101e65780634960645514610294578063779997c3146102e157806382afd23b146103125780638a72ea6a14610357578063b4f9b6c814610453578063c41a360a14610484578063d6febde8146104f1578063f09ea2a614610540575b600080fd5b3480156100cb57600080fd5b50610158600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff1690602001909291905050506105cb565b60405180826000191660001916815260200191505060405180910390f35b34801561018257600080fd5b5061018b61060a565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b506101cc60048036038101908080359060200190929190505050610610565b604051808215151515815260200191505060405180910390f35b3480156101f257600080fd5b5061021160048036038101908080359060200190929190505050610bf7565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b3480156102a057600080fd5b506102df600480360381019080803560001916906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610c78565b005b3480156102ed57600080fd5b506103106004803603810190808035600019169060200190929190505050610ca7565b005b34801561031e57600080fd5b5061033d60048036038101908080359060200190929190505050610ff1565b604051808215151515815260200191505060405180910390f35b34801561036357600080fd5b5061038260048036038101908080359060200190929190505050611031565b604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390f35b34801561045f57600080fd5b5061048260048036038101908080356000191690602001909291905050506110e1565b005b34801561049057600080fd5b506104af600480360381019080803590602001909291905050506110fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104fd57600080fd5b50610526600480360381019080803590602001909291908035906020019092919050505061113c565b604051808215151515815260200191505060405180910390f35b34801561054c57600080fd5b506105b560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061199a565b6040518082815260200191505060405180910390f35b60006105fd836fffffffffffffffffffffffffffffffff1686846fffffffffffffffffffffffffffffffff168761199a565b6001029050949350505050565b60005481565b600061061a612174565b8261062481610ff1565b151561062f57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1661064f826110fc565b73ffffffffffffffffffffffffffffffffffffffff1614151561067157600080fd5b600260009054906101000a900460ff1615151561068d57600080fd5b6001600260006101000a81548160ff0219169083151502179055506001600085815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150600160008581526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff02191690555050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836080015184600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561097657600080fd5b505af115801561098a573d6000803e3d6000fd5b505050506040513d60208110156109a057600080fd5b810190808051906020019092919050505015156109bc57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488846040518082815260200191505060405180910390a1816080015173ffffffffffffffffffffffffffffffffffffffff1682602001518360600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191685600102600019167f9577941d28fff863bfbee4694a6a4a56fb09e169619189d2eaa750b5b4819995856020015186606001518760000151886040015142604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4600192506000600260006101000a81548160ff0219169083151502179055505050919050565b600080600080600060016000878152602001908152602001600020905080600001548160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600201548360030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450945094509450509193509193565b610c988260019004826fffffffffffffffffffffffffffffffff1661113c565b1515610ca357600080fd5b5050565b60008160019004610cb781610ff1565b1515610cc257600080fd5b826001900491506001600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191684600019167f70a14c213064359ede031fd2a1645a11ce2ec825ffe6ab5cfb5b160c3ef4d0a26001600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600088815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600089815260200190815260200160002060000154600160008a815260200190815260200160002060020154600160008b815260200190815260200160002060040160149054906101000a900467ffffffffffffffff16604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a4505050565b6000806001600084815260200190815260200160002060040160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16119050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900467ffffffffffffffff16905086565b6110ee8160019004610610565b15156110f957600080fd5b50565b60006001600083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611146612174565b60008461115281610ff1565b151561115d57600080fd5b600260009054906101000a900460ff1615151561117957600080fd5b6001600260006101000a81548160ff0219169083151502179055506001600087815260200190815260200160002060c06040519081016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509250826000015161131086856040015161203b565b81151561131957fe5b04915081826fffffffffffffffffffffffffffffffff1614151561133c57600080fd5b84856fffffffffffffffffffffffffffffffff1614151561135c57600080fd5b600085148061136b5750600082145b806113795750826000015185115b806113875750826040015182115b156113955760009350611976565b6113a38360000151866120d4565b60016000888152602001908152602001600020600001819055506113cb8360400151836120d4565b6001600088815260200190815260200160002060020181905550826060015173ffffffffffffffffffffffffffffffffffffffff166323b872dd338560800151856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156114c457600080fd5b505af11580156114d8573d6000803e3d6000fd5b505050506040513d60208110156114ee57600080fd5b8101908080519060200190929190505050151561150a57600080fd5b826020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115b157600080fd5b505af11580156115c5573d6000803e3d6000fd5b505050506040513d60208110156115db57600080fd5b810190808051906020019092919050505015156115f757600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488866040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff16836080015173ffffffffffffffffffffffffffffffffffffffff1684602001518560600151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600019167f3383e3357c77fd2e3a4b30deea81179bc70a795d053d14d5b7f2f01d0fd4596f89600102876020015188606001518b89426040518087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff168152602001965050505050505060405180910390a4826060015173ffffffffffffffffffffffffffffffffffffffff16836020015173ffffffffffffffffffffffffffffffffffffffff167f819e390338feffe95e2de57172d6faf337853dfd15c7a09a32d76f7fd24438758785604051808381526020018281526020019250505060405180910390a360006001600088815260200190815260200160002060000154141561197157600160008781526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160146101000a81549067ffffffffffffffff021916905550505b600193505b6000600260006101000a81548160ff02191690831515021790555050505092915050565b60006119a4612174565b600260009054906101000a900460ff161515156119c057600080fd5b6001600260006101000a81548160ff02191690831515021790555085866fffffffffffffffffffffffffffffffff161415156119fb57600080fd5b83846fffffffffffffffffffffffffffffffff16141515611a1b57600080fd5b600086111515611a2a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515611a6657600080fd5b600084111515611a7557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611ab157600080fd5b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614151515611aec57600080fd5b8581600001818152505084816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381604001818152505082816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050428160a0019067ffffffffffffffff16908167ffffffffffffffff1681525050611bd0612159565b915080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611dd857600080fd5b505af1158015611dec573d6000803e3d6000fd5b505050506040513d6020811015611e0257600080fd5b81019080805190602001909291905050501515611e1e57600080fd5b7fa2c251311b1a7a475913900a2a73dc9789a21b04bc737e050bbc506dd4eb3488826040518082815260200191505060405180910390a13373ffffffffffffffffffffffffffffffffffffffff168584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014019250505060405180910390206000191683600102600019167f773ff502687307abfa024ac9f62f9752a0d210dac2ffd9a29e38e12e2ea82c8288878b8a42604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff1681526020019550505050505060405180910390a46000600260006101000a81548160ff02191690831515021790555050949350505050565b60008082148061205a5750828283850292508281151561205757fe5b04145b15156120ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6d756c2d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b92915050565b60008282840391508111151515612153576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60008060008154809291906001019190505550600054905090565b60c06040519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff16815250905600a165627a7a72305820f8a82e968fc3e532a7a06a770df21f2ea7d9b37d37bf1a7896fef71fbae4998f0029"}}},"manifest_version":"2","meta":{"description":"Simple on-chain market for ERC20 tokens.","keywords":["dapphub"," dappsys"," maker"," solidity"],"license":"GPL3","links":{"repo":"https://github.com/makerdao/maker-otc"}},"package_name":"maker-otc","sources":{"./ds-auth/auth.sol":"// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.4.23;\n\ncontract DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) public view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority  public  authority;\n    address      public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        emit LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        emit LogSetAuthority(address(authority));\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\");\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(0)) {\n            return false;\n        } else {\n            return authority.canCall(src, address(this), sig);\n        }\n    }\n}","./ds-math/math.sol":"/// math.sol -- mixin for inline numerical wizardry\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >0.4.13;\n\ncontract DSMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n\n    function min(uint x, uint y) internal pure returns (uint z) {\n        return x <= y ? x : y;\n    }\n    function max(uint x, uint y) internal pure returns (uint z) {\n        return x >= y ? x : y;\n    }\n    function imin(int x, int y) internal pure returns (int z) {\n        return x <= y ? x : y;\n    }\n    function imax(int x, int y) internal pure returns (int z) {\n        return x >= y ? x : y;\n    }\n\n    uint constant WAD = 10 ** 18;\n    uint constant RAY = 10 ** 27;\n\n    function wmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), WAD / 2) / WAD;\n    }\n    function rmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), RAY / 2) / RAY;\n    }\n    function wdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, WAD), y / 2) / y;\n    }\n    function rdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, RAY), y / 2) / y;\n    }\n\n    // This famous algorithm is called \"exponentiation by squaring\"\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\n    //\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\n    //\n    // These facts are why it works:\n    //\n    //  If n is even, then x^n = (x^2)^(n/2).\n    //  If n is odd,  then x^n = x * x^(n-1),\n    //   and applying the equation for even x gives\n    //    x^n = x * (x^2)^((n-1) / 2).\n    //\n    //  Also, EVM division is flooring and\n    //    floor[(n-1) / 2] = floor[n / 2].\n    //\n    function rpow(uint x, uint n) internal pure returns (uint z) {\n        z = n % 2 != 0 ? x : RAY;\n\n        for (n /= 2; n != 0; n /= 2) {\n            x = rmul(x, x);\n\n            if (n % 2 != 0) {\n                z = rmul(z, x);\n            }\n        }\n    }\n}","./ds-note/note.sol":"/// note.sol -- the `note' modifier, for logging calls as events\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.4.23;\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint256           wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n        uint256 wad;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n            wad := callvalue\n        }\n\n        emit LogNote(msg.sig, msg.sender, foo, bar, wad, msg.data);\n\n        _;\n    }\n}","./erc20/erc20.sol":"/// erc20.sol -- API for the ERC20 token standard\n\n// See <https://github.com/ethereum/EIPs/issues/20>.\n\n// This file likely does not meet the threshold of originality\n// required for copyright to apply.  As a result, this is free and\n// unencumbered software belonging to the public domain.\n\npragma solidity >0.4.20;\n\ncontract ERC20Events {\n    event Approval(address indexed src, address indexed guy, uint wad);\n    event Transfer(address indexed src, address indexed dst, uint wad);\n}\n\ncontract ERC20 is ERC20Events {\n    function totalSupply() public view returns (uint);\n    function balanceOf(address guy) public view returns (uint);\n    function allowance(address src, address guy) public view returns (uint);\n\n    function approve(address guy, uint wad) public returns (bool);\n    function transfer(address dst, uint wad) public returns (bool);\n    function transferFrom(\n        address src, address dst, uint wad\n    ) public returns (bool);\n}","./expiring_market.sol":"/// expiring_market.sol\n\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.18;\n\nimport \"ds-auth/auth.sol\";\n\nimport \"./simple_market.sol\";\n\n// Simple Market with a market lifetime. When the close_time has been reached,\n// offers can only be cancelled (offer and buy will throw).\n\ncontract ExpiringMarket is DSAuth, SimpleMarket {\n    uint64 public close_time;\n    bool public stopped;\n\n    // after close_time has been reached, no new offers are allowed\n    modifier can_offer {\n        require(!isClosed());\n        _;\n    }\n\n    // after close, no new buys are allowed\n    modifier can_buy(uint id) {\n        require(isActive(id));\n        require(!isClosed());\n        _;\n    }\n\n    // after close, anyone can cancel an offer\n    modifier can_cancel(uint id) {\n        require(isActive(id));\n        require((msg.sender == getOwner(id)) || isClosed());\n        _;\n    }\n\n    function ExpiringMarket(uint64 _close_time)\n        public\n    {\n        close_time = _close_time;\n    }\n\n    function isClosed() public constant returns (bool closed) {\n        return stopped || getTime() > close_time;\n    }\n\n    function getTime() public constant returns (uint64) {\n        return uint64(now);\n    }\n\n    function stop() public auth {\n        stopped = true;\n    }\n}","./matching_market.sol":"/// matching_market.sol\n\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.18;\n\nimport \"./expiring_market.sol\";\nimport \"ds-note/note.sol\";\n\ncontract MatchingEvents {\n    event LogBuyEnabled(bool isEnabled);\n    event LogMinSell(address pay_gem, uint min_amount);\n    event LogMatchingEnabled(bool isEnabled);\n    event LogUnsortedOffer(uint id);\n    event LogSortedOffer(uint id);\n    event LogInsert(address keeper, uint id);\n    event LogDelete(address keeper, uint id);\n}\n\ncontract MatchingMarket is MatchingEvents, ExpiringMarket, DSNote {\n    bool public buyEnabled = true;      //buy enabled\n    bool public matchingEnabled = true; //true: enable matching,\n                                         //false: revert to expiring market\n    struct sortInfo {\n        uint next;  //points to id of next higher offer\n        uint prev;  //points to id of previous lower offer\n        uint delb;  //the blocknumber where this entry was marked for delete\n    }\n    mapping(uint => sortInfo) public _rank;                     //doubly linked lists of sorted offer ids\n    mapping(address => mapping(address => uint)) public _best;  //id of the highest offer for a token pair\n    mapping(address => mapping(address => uint)) public _span;  //number of offers stored for token pair in sorted orderbook\n    mapping(address => uint) public _dust;                      //minimum sell amount for a token to avoid dust offers\n    mapping(uint => uint) public _near;         //next unsorted offer id\n    uint _head;                                 //first unsorted offer id\n    uint public dustId;                         // id of the latest offer marked as dust\n\n\n    function MatchingMarket(uint64 close_time) ExpiringMarket(close_time) public {\n    }\n\n    // After close, anyone can cancel an offer\n    modifier can_cancel(uint id) {\n        require(isActive(id), \"Offer was deleted or taken, or never existed.\");\n        require(\n            isClosed() || msg.sender == getOwner(id) || id == dustId,\n            \"Offer can not be cancelled because user is not owner, and market is open, and offer sells required amount of tokens.\"\n        );\n        _;\n    }\n\n    // ---- Public entrypoints ---- //\n\n    function make(\n        ERC20    pay_gem,\n        ERC20    buy_gem,\n        uint128  pay_amt,\n        uint128  buy_amt\n    )\n        public\n        returns (bytes32)\n    {\n        return bytes32(offer(pay_amt, pay_gem, buy_amt, buy_gem));\n    }\n\n    function take(bytes32 id, uint128 maxTakeAmount) public {\n        require(buy(uint256(id), maxTakeAmount));\n    }\n\n    function kill(bytes32 id) public {\n        require(cancel(uint256(id)));\n    }\n\n    // Make a new offer. Takes funds from the caller into market escrow.\n    //\n    // If matching is enabled:\n    //     * creates new offer without putting it in\n    //       the sorted list.\n    //     * available to authorized contracts only!\n    //     * keepers should call insert(id,pos)\n    //       to put offer in the sorted list.\n    //\n    // If matching is disabled:\n    //     * calls expiring market's offer().\n    //     * available to everyone without authorization.\n    //     * no sorting is done.\n    //\n    function offer(\n        uint pay_amt,    //maker (ask) sell how much\n        ERC20 pay_gem,   //maker (ask) sell which token\n        uint buy_amt,    //taker (ask) buy how much\n        ERC20 buy_gem    //taker (ask) buy which token\n    )\n        public\n        returns (uint)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        var fn = matchingEnabled ? _offeru : super.offer;\n        return fn(pay_amt, pay_gem, buy_amt, buy_gem);\n    }\n\n    // Make a new offer. Takes funds from the caller into market escrow.\n    function offer(\n        uint pay_amt,    //maker (ask) sell how much\n        ERC20 pay_gem,   //maker (ask) sell which token\n        uint buy_amt,    //maker (ask) buy how much\n        ERC20 buy_gem,   //maker (ask) buy which token\n        uint pos         //position to insert offer, 0 should be used if unknown\n    )\n        public\n        can_offer\n        returns (uint)\n    {\n        return offer(pay_amt, pay_gem, buy_amt, buy_gem, pos, true);\n    }\n\n    function offer(\n        uint pay_amt,    //maker (ask) sell how much\n        ERC20 pay_gem,   //maker (ask) sell which token\n        uint buy_amt,    //maker (ask) buy how much\n        ERC20 buy_gem,   //maker (ask) buy which token\n        uint pos,        //position to insert offer, 0 should be used if unknown\n        bool rounding    //match \"close enough\" orders?\n    )\n        public\n        can_offer\n        returns (uint)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        require(_dust[pay_gem] <= pay_amt);\n\n        if (matchingEnabled) {\n          return _matcho(pay_amt, pay_gem, buy_amt, buy_gem, pos, rounding);\n        }\n        return super.offer(pay_amt, pay_gem, buy_amt, buy_gem);\n    }\n\n    //Transfers funds from caller to offer maker, and from market to caller.\n    function buy(uint id, uint amount)\n        public\n        can_buy(id)\n        returns (bool)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        var fn = matchingEnabled ? _buys : super.buy;\n        return fn(id, amount);\n    }\n\n    // Cancel an offer. Refunds offer maker.\n    function cancel(uint id)\n        public\n        can_cancel(id)\n        returns (bool success)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        if (matchingEnabled) {\n            if (isOfferSorted(id)) {\n                require(_unsort(id));\n            } else {\n                require(_hide(id));\n            }\n        }\n        return super.cancel(id);    //delete the offer.\n    }\n\n    //insert offer into the sorted list\n    //keepers need to use this function\n    function insert(\n        uint id,   //maker (ask) id\n        uint pos   //position to insert into\n    )\n        public\n        returns (bool)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        require(!isOfferSorted(id));    //make sure offers[id] is not yet sorted\n        require(isActive(id));          //make sure offers[id] is active\n\n        _hide(id);                      //remove offer from unsorted offers list\n        _sort(id, pos);                 //put offer into the sorted offers list\n        LogInsert(msg.sender, id);\n        return true;\n    }\n\n    //deletes _rank [id]\n    //  Function should be called by keepers.\n    function del_rank(uint id)\n        public\n        returns (bool)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        require(!isActive(id) && _rank[id].delb != 0 && _rank[id].delb < block.number - 10);\n        delete _rank[id];\n        LogDelete(msg.sender, id);\n        return true;\n    }\n\n    //set the minimum sell amount for a token\n    //    Function is used to avoid \"dust offers\" that have\n    //    very small amount of tokens to sell, and it would\n    //    cost more gas to accept the offer, than the value\n    //    of tokens received.\n    function setMinSell(\n        ERC20 pay_gem,     //token to assign minimum sell amount to\n        uint dust          //maker (ask) minimum sell amount\n    )\n        public\n        auth\n        note\n        returns (bool)\n    {\n        _dust[pay_gem] = dust;\n        LogMinSell(pay_gem, dust);\n        return true;\n    }\n\n    //returns the minimum sell amount for an offer\n    function getMinSell(\n        ERC20 pay_gem      //token for which minimum sell amount is queried\n    )\n        public\n        constant\n        returns (uint)\n    {\n        return _dust[pay_gem];\n    }\n\n    //set buy functionality enabled/disabled\n    function setBuyEnabled(bool buyEnabled_) public auth returns (bool) {\n        buyEnabled = buyEnabled_;\n        LogBuyEnabled(buyEnabled);\n        return true;\n    }\n\n    //set matching enabled/disabled\n    //    If matchingEnabled true(default), then inserted offers are matched.\n    //    Except the ones inserted by contracts, because those end up\n    //    in the unsorted list of offers, that must be later sorted by\n    //    keepers using insert().\n    //    If matchingEnabled is false then MatchingMarket is reverted to ExpiringMarket,\n    //    and matching is not done, and sorted lists are disabled.\n    function setMatchingEnabled(bool matchingEnabled_) public auth returns (bool) {\n        matchingEnabled = matchingEnabled_;\n        LogMatchingEnabled(matchingEnabled);\n        return true;\n    }\n\n    //return the best offer for a token pair\n    //      the best offer is the lowest one if it's an ask,\n    //      and highest one if it's a bid offer\n    function getBestOffer(ERC20 sell_gem, ERC20 buy_gem) public constant returns(uint) {\n        return _best[sell_gem][buy_gem];\n    }\n\n    //return the next worse offer in the sorted list\n    //      the worse offer is the higher one if its an ask,\n    //      a lower one if its a bid offer,\n    //      and in both cases the newer one if they're equal.\n    function getWorseOffer(uint id) public constant returns(uint) {\n        return _rank[id].prev;\n    }\n\n    //return the next better offer in the sorted list\n    //      the better offer is in the lower priced one if its an ask,\n    //      the next higher priced one if its a bid offer\n    //      and in both cases the older one if they're equal.\n    function getBetterOffer(uint id) public constant returns(uint) {\n\n        return _rank[id].next;\n    }\n\n    //return the amount of better offers for a token pair\n    function getOfferCount(ERC20 sell_gem, ERC20 buy_gem) public constant returns(uint) {\n        return _span[sell_gem][buy_gem];\n    }\n\n    //get the first unsorted offer that was inserted by a contract\n    //      Contracts can't calculate the insertion position of their offer because it is not an O(1) operation.\n    //      Their offers get put in the unsorted list of offers.\n    //      Keepers can calculate the insertion position offchain and pass it to the insert() function to insert\n    //      the unsorted offer into the sorted list. Unsorted offers will not be matched, but can be bought with buy().\n    function getFirstUnsortedOffer() public constant returns(uint) {\n        return _head;\n    }\n\n    //get the next unsorted offer\n    //      Can be used to cycle through all the unsorted offers.\n    function getNextUnsortedOffer(uint id) public constant returns(uint) {\n        return _near[id];\n    }\n\n    function isOfferSorted(uint id) public constant returns(bool) {\n        return _rank[id].next != 0\n               || _rank[id].prev != 0\n               || _best[offers[id].pay_gem][offers[id].buy_gem] == id;\n    }\n\n    function sellAllAmount(ERC20 pay_gem, uint pay_amt, ERC20 buy_gem, uint min_fill_amount)\n        public\n        returns (uint fill_amt)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        uint offerId;\n        while (pay_amt > 0) {                           //while there is amount to sell\n            offerId = getBestOffer(buy_gem, pay_gem);   //Get the best offer for the token pair\n            require(offerId != 0);                      //Fails if there are not more offers\n\n            // There is a chance that pay_amt is smaller than 1 wei of the other token\n            if (pay_amt * 1 ether < wdiv(offers[offerId].buy_amt, offers[offerId].pay_amt)) {\n                break;                                  //We consider that all amount is sold\n            }\n            if (pay_amt >= offers[offerId].buy_amt) {                       //If amount to sell is higher or equal than current offer amount to buy\n                fill_amt = add(fill_amt, offers[offerId].pay_amt);          //Add amount bought to acumulator\n                pay_amt = sub(pay_amt, offers[offerId].buy_amt);            //Decrease amount to sell\n                take(bytes32(offerId), uint128(offers[offerId].pay_amt));   //We take the whole offer\n            } else { // if lower\n                var baux = rmul(pay_amt * 10 ** 9, rdiv(offers[offerId].pay_amt, offers[offerId].buy_amt)) / 10 ** 9;\n                fill_amt = add(fill_amt, baux);         //Add amount bought to acumulator\n                take(bytes32(offerId), uint128(baux));  //We take the portion of the offer that we need\n                pay_amt = 0;                            //All amount is sold\n            }\n        }\n        require(fill_amt >= min_fill_amount);\n    }\n\n    function buyAllAmount(ERC20 buy_gem, uint buy_amt, ERC20 pay_gem, uint max_fill_amount)\n        public\n        returns (uint fill_amt)\n    {\n        require(!locked, \"Reentrancy attempt\");\n        uint offerId;\n        while (buy_amt > 0) {                           //Meanwhile there is amount to buy\n            offerId = getBestOffer(buy_gem, pay_gem);   //Get the best offer for the token pair\n            require(offerId != 0);\n\n            // There is a chance that buy_amt is smaller than 1 wei of the other token\n            if (buy_amt * 1 ether < wdiv(offers[offerId].pay_amt, offers[offerId].buy_amt)) {\n                break;                                  //We consider that all amount is sold\n            }\n            if (buy_amt >= offers[offerId].pay_amt) {                       //If amount to buy is higher or equal than current offer amount to sell\n                fill_amt = add(fill_amt, offers[offerId].buy_amt);          //Add amount sold to acumulator\n                buy_amt = sub(buy_amt, offers[offerId].pay_amt);            //Decrease amount to buy\n                take(bytes32(offerId), uint128(offers[offerId].pay_amt));   //We take the whole offer\n            } else {                                                        //if lower\n                fill_amt = add(fill_amt, rmul(buy_amt * 10 ** 9, rdiv(offers[offerId].buy_amt, offers[offerId].pay_amt)) / 10 ** 9); //Add amount sold to acumulator\n                take(bytes32(offerId), uint128(buy_amt));                   //We take the portion of the offer that we need\n                buy_amt = 0;                                                //All amount is bought\n            }\n        }\n        require(fill_amt <= max_fill_amount);\n    }\n\n    function getBuyAmount(ERC20 buy_gem, ERC20 pay_gem, uint pay_amt) public constant returns (uint fill_amt) {\n        var offerId = getBestOffer(buy_gem, pay_gem);           //Get best offer for the token pair\n        while (pay_amt > offers[offerId].buy_amt) {\n            fill_amt = add(fill_amt, offers[offerId].pay_amt);  //Add amount to buy accumulator\n            pay_amt = sub(pay_amt, offers[offerId].buy_amt);    //Decrease amount to pay\n            if (pay_amt > 0) {                                  //If we still need more offers\n                offerId = getWorseOffer(offerId);               //We look for the next best offer\n                require(offerId != 0);                          //Fails if there are not enough offers to complete\n            }\n        }\n        fill_amt = add(fill_amt, rmul(pay_amt * 10 ** 9, rdiv(offers[offerId].pay_amt, offers[offerId].buy_amt)) / 10 ** 9); //Add proportional amount of last offer to buy accumulator\n    }\n\n    function getPayAmount(ERC20 pay_gem, ERC20 buy_gem, uint buy_amt) public constant returns (uint fill_amt) {\n        var offerId = getBestOffer(buy_gem, pay_gem);           //Get best offer for the token pair\n        while (buy_amt > offers[offerId].pay_amt) {\n            fill_amt = add(fill_amt, offers[offerId].buy_amt);  //Add amount to pay accumulator\n            buy_amt = sub(buy_amt, offers[offerId].pay_amt);    //Decrease amount to buy\n            if (buy_amt > 0) {                                  //If we still need more offers\n                offerId = getWorseOffer(offerId);               //We look for the next best offer\n                require(offerId != 0);                          //Fails if there are not enough offers to complete\n            }\n        }\n        fill_amt = add(fill_amt, rmul(buy_amt * 10 ** 9, rdiv(offers[offerId].buy_amt, offers[offerId].pay_amt)) / 10 ** 9); //Add proportional amount of last offer to pay accumulator\n    }\n\n    // ---- Internal Functions ---- //\n\n    function _buys(uint id, uint amount)\n        internal\n        returns (bool)\n    {\n        require(buyEnabled);\n        if (amount == offers[id].pay_amt) {\n            if (isOfferSorted(id)) {\n                //offers[id] must be removed from sorted list because all of it is bought\n                _unsort(id);\n            }else{\n                _hide(id);\n            }\n        }\n        require(super.buy(id, amount));\n        // If offer has become dust during buy, we cancel it\n        if (isActive(id) && offers[id].pay_amt < _dust[offers[id].pay_gem]) {\n            dustId = id; //enable current msg.sender to call cancel(id)\n            cancel(id);\n        }\n        return true;\n    }\n\n    //find the id of the next higher offer after offers[id]\n    function _find(uint id)\n        internal\n        view\n        returns (uint)\n    {\n        require( id > 0 );\n\n        address buy_gem = address(offers[id].buy_gem);\n        address pay_gem = address(offers[id].pay_gem);\n        uint top = _best[pay_gem][buy_gem];\n        uint old_top = 0;\n\n        // Find the larger-than-id order whose successor is less-than-id.\n        while (top != 0 && _isPricedLtOrEq(id, top)) {\n            old_top = top;\n            top = _rank[top].prev;\n        }\n        return old_top;\n    }\n\n    //find the id of the next higher offer after offers[id]\n    function _findpos(uint id, uint pos)\n        internal\n        view\n        returns (uint)\n    {\n        require(id > 0);\n\n        // Look for an active order.\n        while (pos != 0 && !isActive(pos)) {\n            pos = _rank[pos].prev;\n        }\n\n        if (pos == 0) {\n            //if we got to the end of list without a single active offer\n            return _find(id);\n\n        } else {\n            // if we did find a nearby active offer\n            // Walk the order book down from there...\n            if(_isPricedLtOrEq(id, pos)) {\n                uint old_pos;\n\n                // Guaranteed to run at least once because of\n                // the prior if statements.\n                while (pos != 0 && _isPricedLtOrEq(id, pos)) {\n                    old_pos = pos;\n                    pos = _rank[pos].prev;\n                }\n                return old_pos;\n\n            // ...or walk it up.\n            } else {\n                while (pos != 0 && !_isPricedLtOrEq(id, pos)) {\n                    pos = _rank[pos].next;\n                }\n                return pos;\n            }\n        }\n    }\n\n    //return true if offers[low] priced less than or equal to offers[high]\n    function _isPricedLtOrEq(\n        uint low,   //lower priced offer's id\n        uint high   //higher priced offer's id\n    )\n        internal\n        view\n        returns (bool)\n    {\n        return mul(offers[low].buy_amt, offers[high].pay_amt)\n          >= mul(offers[high].buy_amt, offers[low].pay_amt);\n    }\n\n    //these variables are global only because of solidity local variable limit\n\n    //match offers with taker offer, and execute token transactions\n    function _matcho(\n        uint t_pay_amt,    //taker sell how much\n        ERC20 t_pay_gem,   //taker sell which token\n        uint t_buy_amt,    //taker buy how much\n        ERC20 t_buy_gem,   //taker buy which token\n        uint pos,          //position id\n        bool rounding      //match \"close enough\" orders?\n    )\n        internal\n        returns (uint id)\n    {\n        uint best_maker_id;    //highest maker id\n        uint t_buy_amt_old;    //taker buy how much saved\n        uint m_buy_amt;        //maker offer wants to buy this much token\n        uint m_pay_amt;        //maker offer wants to sell this much token\n\n        // there is at least one offer stored for token pair\n        while (_best[t_buy_gem][t_pay_gem] > 0) {\n            best_maker_id = _best[t_buy_gem][t_pay_gem];\n            m_buy_amt = offers[best_maker_id].buy_amt;\n            m_pay_amt = offers[best_maker_id].pay_amt;\n\n            // Ugly hack to work around rounding errors. Based on the idea that\n            // the furthest the amounts can stray from their \"true\" values is 1.\n            // Ergo the worst case has t_pay_amt and m_pay_amt at +1 away from\n            // their \"correct\" values and m_buy_amt and t_buy_amt at -1.\n            // Since (c - 1) * (d - 1) > (a + 1) * (b + 1) is equivalent to\n            // c * d > a * b + a + b + c + d, we write...\n            if (mul(m_buy_amt, t_buy_amt) > mul(t_pay_amt, m_pay_amt) +\n                (rounding ? m_buy_amt + t_buy_amt + t_pay_amt + m_pay_amt : 0))\n            {\n                break;\n            }\n            // ^ The `rounding` parameter is a compromise borne of a couple days\n            // of discussion.\n            buy(best_maker_id, min(m_pay_amt, t_buy_amt));\n            t_buy_amt_old = t_buy_amt;\n            t_buy_amt = sub(t_buy_amt, min(m_pay_amt, t_buy_amt));\n            t_pay_amt = mul(t_buy_amt, t_pay_amt) / t_buy_amt_old;\n\n            if (t_pay_amt == 0 || t_buy_amt == 0) {\n                break;\n            }\n        }\n\n        if (t_buy_amt > 0 && t_pay_amt > 0 && t_pay_amt >= _dust[t_pay_gem]) {\n            //new offer should be created\n            id = super.offer(t_pay_amt, t_pay_gem, t_buy_amt, t_buy_gem);\n            //insert offer into the sorted list\n            _sort(id, pos);\n        }\n    }\n\n    // Make a new offer without putting it in the sorted list.\n    // Takes funds from the caller into market escrow.\n    // ****Available to authorized contracts only!**********\n    // Keepers should call insert(id,pos) to put offer in the sorted list.\n    function _offeru(\n        uint pay_amt,      //maker (ask) sell how much\n        ERC20 pay_gem,     //maker (ask) sell which token\n        uint buy_amt,      //maker (ask) buy how much\n        ERC20 buy_gem      //maker (ask) buy which token\n    )\n        internal\n        returns (uint id)\n    {\n        require(_dust[pay_gem] <= pay_amt);\n        id = super.offer(pay_amt, pay_gem, buy_amt, buy_gem);\n        _near[id] = _head;\n        _head = id;\n        LogUnsortedOffer(id);\n    }\n\n    //put offer into the sorted list\n    function _sort(\n        uint id,    //maker (ask) id\n        uint pos    //position to insert into\n    )\n        internal\n    {\n        require(isActive(id));\n\n        address buy_gem = address(offers[id].buy_gem);\n        address pay_gem = address(offers[id].pay_gem);\n        uint prev_id;                                      //maker (ask) id\n\n        pos = pos == 0 || offers[pos].pay_gem != pay_gem || offers[pos].buy_gem != buy_gem || !isOfferSorted(pos)\n        ?\n            _find(id)\n        :\n            _findpos(id, pos);\n\n        if (pos != 0) {                                    //offers[id] is not the highest offer\n            //requirement below is satisfied by statements above\n            //require(_isPricedLtOrEq(id, pos));\n            prev_id = _rank[pos].prev;\n            _rank[pos].prev = id;\n            _rank[id].next = pos;\n        } else {                                           //offers[id] is the highest offer\n            prev_id = _best[pay_gem][buy_gem];\n            _best[pay_gem][buy_gem] = id;\n        }\n\n        if (prev_id != 0) {                               //if lower offer does exist\n            //requirement below is satisfied by statements above\n            //require(!_isPricedLtOrEq(id, prev_id));\n            _rank[prev_id].next = id;\n            _rank[id].prev = prev_id;\n        }\n\n        _span[pay_gem][buy_gem]++;\n        LogSortedOffer(id);\n    }\n\n    // Remove offer from the sorted list (does not cancel offer)\n    function _unsort(\n        uint id    //id of maker (ask) offer to remove from sorted list\n    )\n        internal\n        returns (bool)\n    {\n        address buy_gem = address(offers[id].buy_gem);\n        address pay_gem = address(offers[id].pay_gem);\n        require(_span[pay_gem][buy_gem] > 0);\n\n        require(_rank[id].delb == 0 &&                    //assert id is in the sorted list\n                 isOfferSorted(id));\n\n        if (id != _best[pay_gem][buy_gem]) {              // offers[id] is not the highest offer\n            require(_rank[_rank[id].next].prev == id);\n            _rank[_rank[id].next].prev = _rank[id].prev;\n        } else {                                          //offers[id] is the highest offer\n            _best[pay_gem][buy_gem] = _rank[id].prev;\n        }\n\n        if (_rank[id].prev != 0) {                        //offers[id] is not the lowest offer\n            require(_rank[_rank[id].prev].next == id);\n            _rank[_rank[id].prev].next = _rank[id].next;\n        }\n\n        _span[pay_gem][buy_gem]--;\n        _rank[id].delb = block.number;                    //mark _rank[id] for deletion\n        return true;\n    }\n\n    //Hide offer from the unsorted order book (does not cancel offer)\n    function _hide(\n        uint id     //id of maker offer to remove from unsorted list\n    )\n        internal\n        returns (bool)\n    {\n        uint uid = _head;               //id of an offer in unsorted offers list\n        uint pre = uid;                 //id of previous offer in unsorted offers list\n\n        require(!isOfferSorted(id));    //make sure offer id is not in sorted offers list\n\n        if (_head == id) {              //check if offer is first offer in unsorted offers list\n            _head = _near[id];          //set head to new first unsorted offer\n            _near[id] = 0;              //delete order from unsorted order list\n            return true;\n        }\n        while (uid > 0 && uid != id) {  //find offer in unsorted order list\n            pre = uid;\n            uid = _near[uid];\n        }\n        if (uid != id) {                //did not find offer id in unsorted offers list\n            return false;\n        }\n        _near[pre] = _near[id];         //set previous unsorted offer to point to offer after offer id\n        _near[id] = 0;                  //delete order from unsorted order list\n        return true;\n    }\n}","./simple_market.sol":"/// simple_market.sol\n\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\npragma solidity ^0.4.18;\n\nimport \"ds-math/math.sol\";\nimport \"erc20/erc20.sol\";\n\ncontract EventfulMarket {\n    event LogItemUpdate(uint id);\n    event LogTrade(uint pay_amt, address indexed pay_gem,\n                   uint buy_amt, address indexed buy_gem);\n\n    event LogMake(\n        bytes32  indexed  id,\n        bytes32  indexed  pair,\n        address  indexed  maker,\n        ERC20             pay_gem,\n        ERC20             buy_gem,\n        uint128           pay_amt,\n        uint128           buy_amt,\n        uint64            timestamp\n    );\n\n    event LogBump(\n        bytes32  indexed  id,\n        bytes32  indexed  pair,\n        address  indexed  maker,\n        ERC20             pay_gem,\n        ERC20             buy_gem,\n        uint128           pay_amt,\n        uint128           buy_amt,\n        uint64            timestamp\n    );\n\n    event LogTake(\n        bytes32           id,\n        bytes32  indexed  pair,\n        address  indexed  maker,\n        ERC20             pay_gem,\n        ERC20             buy_gem,\n        address  indexed  taker,\n        uint128           take_amt,\n        uint128           give_amt,\n        uint64            timestamp\n    );\n\n    event LogKill(\n        bytes32  indexed  id,\n        bytes32  indexed  pair,\n        address  indexed  maker,\n        ERC20             pay_gem,\n        ERC20             buy_gem,\n        uint128           pay_amt,\n        uint128           buy_amt,\n        uint64            timestamp\n    );\n}\n\ncontract SimpleMarket is EventfulMarket, DSMath {\n\n    uint public last_offer_id;\n\n    mapping (uint => OfferInfo) public offers;\n\n    bool locked;\n\n    struct OfferInfo {\n        uint     pay_amt;\n        ERC20    pay_gem;\n        uint     buy_amt;\n        ERC20    buy_gem;\n        address  owner;\n        uint64   timestamp;\n    }\n\n    modifier can_buy(uint id) {\n        require(isActive(id));\n        _;\n    }\n\n    modifier can_cancel(uint id) {\n        require(isActive(id));\n        require(getOwner(id) == msg.sender);\n        _;\n    }\n\n    modifier can_offer {\n        _;\n    }\n\n    modifier synchronized {\n        require(!locked);\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function isActive(uint id) public constant returns (bool active) {\n        return offers[id].timestamp > 0;\n    }\n\n    function getOwner(uint id) public constant returns (address owner) {\n        return offers[id].owner;\n    }\n\n    function getOffer(uint id) public constant returns (uint, ERC20, uint, ERC20) {\n      var offer = offers[id];\n      return (offer.pay_amt, offer.pay_gem,\n              offer.buy_amt, offer.buy_gem);\n    }\n\n    // ---- Public entrypoints ---- //\n\n    function bump(bytes32 id_)\n        public\n        can_buy(uint256(id_))\n    {\n        var id = uint256(id_);\n        LogBump(\n            id_,\n            keccak256(offers[id].pay_gem, offers[id].buy_gem),\n            offers[id].owner,\n            offers[id].pay_gem,\n            offers[id].buy_gem,\n            uint128(offers[id].pay_amt),\n            uint128(offers[id].buy_amt),\n            offers[id].timestamp\n        );\n    }\n\n    // Accept given `quantity` of an offer. Transfers funds from caller to\n    // offer maker, and from market to caller.\n    function buy(uint id, uint quantity)\n        public\n        can_buy(id)\n        synchronized\n        returns (bool)\n    {\n        OfferInfo memory offer = offers[id];\n        uint spend = mul(quantity, offer.buy_amt) / offer.pay_amt;\n\n        require(uint128(spend) == spend);\n        require(uint128(quantity) == quantity);\n\n        // For backwards semantic compatibility.\n        if (quantity == 0 || spend == 0 ||\n            quantity > offer.pay_amt || spend > offer.buy_amt)\n        {\n            return false;\n        }\n\n        offers[id].pay_amt = sub(offer.pay_amt, quantity);\n        offers[id].buy_amt = sub(offer.buy_amt, spend);\n        require( offer.buy_gem.transferFrom(msg.sender, offer.owner, spend) );\n        require( offer.pay_gem.transfer(msg.sender, quantity) );\n\n        LogItemUpdate(id);\n        LogTake(\n            bytes32(id),\n            keccak256(offer.pay_gem, offer.buy_gem),\n            offer.owner,\n            offer.pay_gem,\n            offer.buy_gem,\n            msg.sender,\n            uint128(quantity),\n            uint128(spend),\n            uint64(now)\n        );\n        LogTrade(quantity, offer.pay_gem, spend, offer.buy_gem);\n\n        if (offers[id].pay_amt == 0) {\n          delete offers[id];\n        }\n\n        return true;\n    }\n\n    // Cancel an offer. Refunds offer maker.\n    function cancel(uint id)\n        public\n        can_cancel(id)\n        synchronized\n        returns (bool success)\n    {\n        // read-only offer. Modify an offer by directly accessing offers[id]\n        OfferInfo memory offer = offers[id];\n        delete offers[id];\n\n        require( offer.pay_gem.transfer(offer.owner, offer.pay_amt) );\n\n        LogItemUpdate(id);\n        LogKill(\n            bytes32(id),\n            keccak256(offer.pay_gem, offer.buy_gem),\n            offer.owner,\n            offer.pay_gem,\n            offer.buy_gem,\n            uint128(offer.pay_amt),\n            uint128(offer.buy_amt),\n            uint64(now)\n        );\n\n        success = true;\n    }\n\n    function kill(bytes32 id)\n        public\n    {\n        require(cancel(uint256(id)));\n    }\n\n    function make(\n        ERC20    pay_gem,\n        ERC20    buy_gem,\n        uint128  pay_amt,\n        uint128  buy_amt\n    )\n        public\n        returns (bytes32 id)\n    {\n        return bytes32(offer(pay_amt, pay_gem, buy_amt, buy_gem));\n    }\n\n    // Make a new offer. Takes funds from the caller into market escrow.\n    function offer(uint pay_amt, ERC20 pay_gem, uint buy_amt, ERC20 buy_gem)\n        public\n        can_offer\n        synchronized\n        returns (uint id)\n    {\n        require(uint128(pay_amt) == pay_amt);\n        require(uint128(buy_amt) == buy_amt);\n        require(pay_amt > 0);\n        require(pay_gem != ERC20(0x0));\n        require(buy_amt > 0);\n        require(buy_gem != ERC20(0x0));\n        require(pay_gem != buy_gem);\n\n        OfferInfo memory info;\n        info.pay_amt = pay_amt;\n        info.pay_gem = pay_gem;\n        info.buy_amt = buy_amt;\n        info.buy_gem = buy_gem;\n        info.owner = msg.sender;\n        info.timestamp = uint64(now);\n        id = _next_id();\n        offers[id] = info;\n\n        require( pay_gem.transferFrom(msg.sender, this, pay_amt) );\n\n        LogItemUpdate(id);\n        LogMake(\n            bytes32(id),\n            keccak256(pay_gem, buy_gem),\n            msg.sender,\n            pay_gem,\n            buy_gem,\n            uint128(pay_amt),\n            uint128(buy_amt),\n            uint64(now)\n        );\n    }\n\n    function take(bytes32 id, uint128 maxTakeAmount)\n        public\n    {\n        require(buy(uint256(id), maxTakeAmount));\n    }\n\n    function _next_id()\n        internal\n        returns (uint)\n    {\n        last_offer_id++; return last_offer_id;\n    }\n}"},"version":"1.0.0"}